<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='output' inline='true' name='textscan.42199.933647245372' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion' filename='output.txt' password='' server=''>
        <relation name='output#txt' table='[output#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Bilineal Timer' ordinal='0' />
            <column datatype='real' name='Bilineal Timer Mean' ordinal='1' />
            <column datatype='real' name='Bilineal Timer Std' ordinal='2' />
            <column datatype='string' name='Splines Timer' ordinal='3' />
            <column datatype='real' name='Splines Timer Mean' ordinal='4' />
            <column datatype='real' name='Splines Timer Std' ordinal='5' />
            <column datatype='integer' name='bloques' ordinal='6' />
            <column datatype='real' name='ecm' ordinal='7' />
            <column datatype='integer' name='k' ordinal='8' />
            <column datatype='string' name='kNN Timer' ordinal='9' />
            <column datatype='real' name='kNN Timer Mean' ordinal='10' />
            <column datatype='real' name='kNN Timer Std' ordinal='11' />
            <column datatype='string' name='method' ordinal='12' />
            <column datatype='string' name='name' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Bilineal Timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Bilineal Timer]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>Bilineal Timer</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bilineal Timer Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bilineal Timer Mean]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>Bilineal Timer Mean</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bilineal Timer Std</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bilineal Timer Std]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>Bilineal Timer Std</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Splines Timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Splines Timer]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>Splines Timer</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Splines Timer Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Splines Timer Mean]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>Splines Timer Mean</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Splines Timer Std</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Splines Timer Std]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>Splines Timer Std</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bloques</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bloques]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>bloques</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ecm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ecm]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>ecm</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kNN Timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[kNN Timer]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>kNN Timer</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kNN Timer Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kNN Timer Mean]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>kNN Timer Mean</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kNN Timer Std</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kNN Timer Std]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>kNN Timer Std</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[output#txt]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[output#txt]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Bilineal Timer]' role='dimension' type='nominal'>
      </column>
      <column caption='PSNR' datatype='real' name='[Calculation_0060714235748498]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='10*LOG((255*255/[ecm]), 10)' />
      </column>
      <column caption='Método' datatype='string' name='[Method (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[method]'>
          <bin value='&quot;bilineal&quot;'>
            <value>&quot;bilineal&quot;</value>
          </bin>
          <bin value='&quot;knn&quot;'>
            <value>&quot;knn&quot;</value>
          </bin>
          <bin value='&quot;splines&quot;'>
            <value>&quot;splines&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;bilineal&quot;' value='Interpolación Bilineal' />
          <alias key='&quot;knn&quot;' value='Vecinos Más Cercanos' />
          <alias key='&quot;splines&quot;' value='Interpolación Por Splines' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Splines Timer]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Bloques' datatype='integer' name='[bloques]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='-1' value='Interpolación Bilineal' />
        </aliases>
      </column>
      <column caption='MSE' datatype='real' name='[ecm]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[kNN Timer]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal'>
      </column>
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[ecm]' derivation='Avg' name='[avg:ecm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bloques]' derivation='None' name='[none:bloques:ok]' pivot='key' type='ordinal' />
      <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Bloques,K)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:bloques:ok]' />
          <groupfilter function='level-members' level='[none:k:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:bloques:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>4</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>257</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>1025</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>65</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>33</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>8</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>9</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>201</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>3</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>101</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>41</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>17</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>81</bucket>
            </map>
            <map to='#d62728'>
              <bucket>12</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>129</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>-1</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>51</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>513</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>16</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Method (group)]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;knn&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;bilineal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;splines&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42199.933647245372].[avg:ecm:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42199.933647245372].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.42199.933647245372]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='splines geometrica_1_test_9_8_ecm' inline='true' name='textscan.42200.002332152777' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/splines' filename='geometrica_1_test_9_8_ecm.csv' password='' server=''>
        <relation name='geometrica_1_test_9_8_ecm#csv' table='[geometrica_1_test_9_8_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[geometrica_1_test_9_8_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[geometrica_1_test_9_8_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[geometrica_1_test_9_8_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geometrica_1_test_9_8_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='knn geometrica_1_test_9_ecm' inline='true' name='textscan.42200.006737361109' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/knn' filename='geometrica_1_test_9_ecm.csv' password='' server=''>
        <relation name='geometrica_1_test_9_ecm#csv' table='[geometrica_1_test_9_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.41791' measure-ordering='alphabetic' measure-percentage='0.41791' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='splines geometrica_1_test_9_4_ecm' inline='true' name='textscan.42200.525526539350' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/splines' filename='geometrica_1_test_9_4_ecm.csv' password='' server=''>
        <relation name='geometrica_1_test_9_4_ecm#csv' table='[geometrica_1_test_9_4_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[geometrica_1_test_9_4_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[geometrica_1_test_9_4_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[geometrica_1_test_9_4_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geometrica_1_test_9_4_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='splines paisaje_2_test_9_8_ecm' inline='true' name='textscan.42200.920957337963' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/splines' filename='paisaje_2_test_9_8_ecm.csv' password='' server=''>
        <relation name='paisaje_2_test_9_8_ecm#csv' table='[paisaje_2_test_9_8_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[paisaje_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[paisaje_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[paisaje_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[paisaje_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='knn paisaje_2_test_9_ecm' inline='true' name='textscan.42200.921559363429' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/knn' filename='paisaje_2_test_9_ecm.csv' password='' server=''>
        <relation name='paisaje_2_test_9_ecm#csv' table='[paisaje_2_test_9_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='bilineal paisaje_2_test_9_ecm' inline='true' name='textscan.42200.921988333335' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/bilineal' filename='paisaje_2_test_9_ecm.csv' password='' server=''>
        <relation name='paisaje_2_test_9_ecm#csv' table='[paisaje_2_test_9_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[paisaje_2_test_9_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='splines paisaje_2_test_9_4_ecm' inline='true' name='textscan.42200.928968402775' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/splines' filename='paisaje_2_test_9_4_ecm.csv' password='' server=''>
        <relation name='paisaje_2_test_9_4_ecm#csv' table='[paisaje_2_test_9_4_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[paisaje_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[paisaje_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[paisaje_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[paisaje_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='knn rostro_2_test_9_ecm' inline='true' name='textscan.42202.468164479164' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/knn' filename='rostro_2_test_9_ecm.csv' password='' server=''>
        <relation name='rostro_2_test_9_ecm#csv' table='[rostro_2_test_9_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='bilineal rostro_2_test_9_ecm' inline='true' name='textscan.42202.468733310183' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/bilineal' filename='rostro_2_test_9_ecm.csv' password='' server=''>
        <relation name='rostro_2_test_9_ecm#csv' table='[rostro_2_test_9_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[rostro_2_test_9_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='splines rostro_2_test_9_4_ecm' inline='true' name='textscan.42202.469266122687' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/splines' filename='rostro_2_test_9_4_ecm.csv' password='' server=''>
        <relation name='rostro_2_test_9_4_ecm#csv' table='[rostro_2_test_9_4_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[rostro_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[rostro_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[rostro_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[rostro_2_test_9_4_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='splines rostro_2_test_9_8_ecm' inline='true' name='textscan.42202.469983993054' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/splines' filename='rostro_2_test_9_8_ecm.csv' password='' server=''>
        <relation name='rostro_2_test_9_8_ecm#csv' table='[rostro_2_test_9_8_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[rostro_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[rostro_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[rostro_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[rostro_2_test_9_8_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='bilineal geometrica_1_test_9_ecm' inline='true' name='textscan.42200.019915185185' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/metnum-tp3/experimentacion/bilineal' filename='geometrica_1_test_9_ecm.csv' password='' server=''>
        <relation name='geometrica_1_test_9_ecm#csv' table='[geometrica_1_test_9_ecm#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='integer' name='Y' ordinal='1' />
            <column datatype='real' name='Value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geometrica_1_test_9_ecm#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Método' datatype='string' name='[Calculation_3640715115619820]' role='measure' type='nominal'>
        <calculation class='tableau' formula='CASE MAX(MAX(AVG([Value]), AVG([textscan.42200.006737361109].[Value])), AVG([textscan.42200.002332152777].[Value]))&#13;&#10;WHEN AVG([Value]) THEN &quot;Interpolación Bilineal&quot;&#13;&#10;WHEN AVG([textscan.42200.006737361109].[Value]) THEN &quot;Vecinos Más Cercanos&quot;&#13;&#10;ELSE &quot;Interpolación por Splines&quot; END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_3640715115619820]' derivation='User' name='[usr:Calculation_3640715115619820:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_3640715115619820:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;kNN&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Interpolación Bilineal&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Vecinos Más Cercanos&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Splines&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bilineal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Interpolación por Splines&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='textscan.42200.002332152777'>
        <column datatype='real' name='[Value]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='textscan.42200.006737361109'>
        <column datatype='real' name='[Value]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Bilineal vs Splines para Imágenes Geométricas'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42199.933647245372' />
          </datasources>
          <datasource-dependencies datasource='textscan.42199.933647245372'>
            <column caption='PSNR' datatype='real' name='[Calculation_0060714235748498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='10*LOG((255*255/[ecm]), 10)' />
            </column>
            <column caption='Método' datatype='string' name='[Method (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[method]'>
                <bin value='&quot;bilineal&quot;'>
                  <value>&quot;bilineal&quot;</value>
                </bin>
                <bin value='&quot;knn&quot;'>
                  <value>&quot;knn&quot;</value>
                </bin>
                <bin value='&quot;splines&quot;'>
                  <value>&quot;splines&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;bilineal&quot;' value='Interpolación Bilineal' />
                <alias key='&quot;knn&quot;' value='Vecinos Más Cercanos' />
                <alias key='&quot;splines&quot;' value='Interpolación Por Splines' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Bloques' datatype='integer' name='[bloques]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Interpolación Bilineal' />
              </aliases>
            </column>
            <column caption='MSE' datatype='real' name='[ecm]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal'>
            </column>
            <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0060714235748498]' derivation='None' name='[none:Calculation_0060714235748498:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bloques]' derivation='None' name='[none:bloques:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ecm]' derivation='None' name='[none:ecm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42199.933647245372].[Method (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Method (group)]' member='&quot;bilineal&quot;' />
              <groupfilter function='member' level='[Method (group)]' member='&quot;splines&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42199.933647245372].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_2&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42199.933647245372].[Method (group)]</column>
            <column>[textscan.42199.933647245372].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[none:bloques:ok]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.42199.933647245372].[none:ecm:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[none:bloques:ok]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[textscan.42199.933647245372].[none:Calculation_0060714235748498:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[none:bloques:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42199.933647245372].[none:ecm:qk] + [textscan.42199.933647245372].[none:Calculation_0060714235748498:qk])</rows>
        <cols>([textscan.42199.933647245372].[none:name:nk] / [textscan.42199.933647245372].[none:k:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Bilineal vs Splines para Otras Imágenes'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42199.933647245372' />
          </datasources>
          <datasource-dependencies datasource='textscan.42199.933647245372'>
            <column caption='PSNR' datatype='real' name='[Calculation_0060714235748498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='10*LOG((255*255/[ecm]), 10)' />
            </column>
            <column caption='Método' datatype='string' name='[Method (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[method]'>
                <bin value='&quot;bilineal&quot;'>
                  <value>&quot;bilineal&quot;</value>
                </bin>
                <bin value='&quot;knn&quot;'>
                  <value>&quot;knn&quot;</value>
                </bin>
                <bin value='&quot;splines&quot;'>
                  <value>&quot;splines&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;bilineal&quot;' value='Interpolación Bilineal' />
                <alias key='&quot;knn&quot;' value='Vecinos Más Cercanos' />
                <alias key='&quot;splines&quot;' value='Interpolación Por Splines' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Bloques' datatype='integer' name='[bloques]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Interpolación Bilineal' />
              </aliases>
            </column>
            <column caption='MSE' datatype='real' name='[ecm]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal'>
            </column>
            <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0060714235748498]' derivation='None' name='[none:Calculation_0060714235748498:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bloques]' derivation='None' name='[none:bloques:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ecm]' derivation='None' name='[none:ecm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42199.933647245372].[Method (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Method (group)]' member='&quot;bilineal&quot;' />
              <groupfilter function='member' level='[Method (group)]' member='&quot;splines&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42199.933647245372].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_2&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_2&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42199.933647245372].[none:name:nk]</column>
            <column>[textscan.42199.933647245372].[Method (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[none:bloques:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.42199.933647245372].[none:ecm:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[none:bloques:ok]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.42199.933647245372].[none:Calculation_0060714235748498:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[none:bloques:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42199.933647245372].[none:ecm:qk] + [textscan.42199.933647245372].[none:Calculation_0060714235748498:qk])</rows>
        <cols>([textscan.42199.933647245372].[none:name:nk] / [textscan.42199.933647245372].[none:k:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Bilineal vs kNN'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42199.933647245372' />
          </datasources>
          <datasource-dependencies datasource='textscan.42199.933647245372'>
            <column caption='PSNR' datatype='real' name='[Calculation_0060714235748498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='10*LOG((255*255/[ecm]), 10)' />
            </column>
            <column caption='Método' datatype='string' name='[Method (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[method]'>
                <bin value='&quot;bilineal&quot;'>
                  <value>&quot;bilineal&quot;</value>
                </bin>
                <bin value='&quot;knn&quot;'>
                  <value>&quot;knn&quot;</value>
                </bin>
                <bin value='&quot;splines&quot;'>
                  <value>&quot;splines&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;bilineal&quot;' value='Interpolación Bilineal' />
                <alias key='&quot;knn&quot;' value='Vecinos Más Cercanos' />
                <alias key='&quot;splines&quot;' value='Interpolación Por Splines' />
              </aliases>
            </column>
            <column caption='MSE' datatype='real' name='[ecm]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal'>
            </column>
            <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0060714235748498]' derivation='None' name='[none:Calculation_0060714235748498:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ecm]' derivation='None' name='[none:ecm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42199.933647245372].[Method (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Method (group)]' member='&quot;bilineal&quot;' />
              <groupfilter function='member' level='[Method (group)]' member='&quot;knn&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42199.933647245372].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_2&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_2&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_2&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42199.933647245372].[Method (group)]</column>
            <column>[textscan.42199.933647245372].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[Method (group)]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.42199.933647245372].[none:ecm:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[Method (group)]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[textscan.42199.933647245372].[none:Calculation_0060714235748498:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[Method (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.42199.933647245372].[none:ecm:qk] + [textscan.42199.933647245372].[none:Calculation_0060714235748498:qk])</rows>
        <cols>([textscan.42199.933647245372].[none:name:nk] / [textscan.42199.933647245372].[none:k:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Geométrica 1 Bilineal K9'>
      <table>
        <view>
          <datasources>
            <datasource caption='bilineal geometrica_1_test_9_ecm' name='textscan.42200.019915185185' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.019915185185'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.019915185185].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.019915185185].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.019915185185].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.019915185185].[none:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42200.019915185185].[none:X:ok]</rows>
        <cols>[textscan.42200.019915185185].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Geométrica 1 Splines K9 B4'>
      <table>
        <view>
          <datasources>
            <datasource caption='splines geometrica_1_test_9_4_ecm' name='textscan.42200.525526539350' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.525526539350'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.525526539350].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.525526539350].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.525526539350].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.525526539350].[none:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42200.525526539350].[none:X:ok]</rows>
        <cols>[textscan.42200.525526539350].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Geométrica 1 Splines K9 B8'>
      <table>
        <view>
          <datasources>
            <datasource caption='splines geometrica_1_test_9_8_ecm' name='textscan.42200.002332152777' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.002332152777'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.002332152777].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.002332152777].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.002332152777].[none:Value:qk]' max='1.0' min='0.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.002332152777].[none:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42200.002332152777].[none:X:ok]</rows>
        <cols>[textscan.42200.002332152777].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Geométrica 1 kNN K9'>
      <table>
        <view>
          <datasources>
            <datasource caption='knn geometrica_1_test_9_ecm' name='textscan.42200.006737361109' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.006737361109'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.006737361109].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.006737361109].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.006737361109].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.006737361109].[none:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42200.006737361109].[none:X:ok]</rows>
        <cols>[textscan.42200.006737361109].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Paisaje 2 Bilineal K9'>
      <table>
        <view>
          <datasources>
            <datasource caption='bilineal paisaje_2_test_9_ecm' name='textscan.42200.921988333335' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.921988333335'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.921988333335].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.921988333335].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.921988333335].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.921988333335].[none:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42200.921988333335].[none:X:ok]</rows>
        <cols>[textscan.42200.921988333335].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Paisaje 2 Splines K9 B4'>
      <table>
        <view>
          <datasources>
            <datasource caption='splines paisaje_2_test_9_4_ecm' name='textscan.42200.928968402775' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.928968402775'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.928968402775].[none:Y:ok]' value='false' />
            <format attr='display' field='[textscan.42200.928968402775].[none:X:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.928968402775].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.928968402775].[none:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42200.928968402775].[none:X:ok]</rows>
        <cols>[textscan.42200.928968402775].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Paisaje 2 Splines K9 B8'>
      <table>
        <view>
          <datasources>
            <datasource caption='splines paisaje_2_test_9_8_ecm' name='textscan.42200.920957337963' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.920957337963'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.920957337963].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.920957337963].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.920957337963].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.920957337963].[none:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42200.920957337963].[none:X:ok]</rows>
        <cols>[textscan.42200.920957337963].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Paisaje 2 kNN K9'>
      <table>
        <view>
          <datasources>
            <datasource caption='knn paisaje_2_test_9_ecm' name='textscan.42200.921559363429' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.921559363429'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.921559363429].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.921559363429].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42200.921559363429].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.921559363429].[none:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42200.921559363429].[none:X:ok]</rows>
        <cols>[textscan.42200.921559363429].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Rostro 2 Bilineal K9'>
      <table>
        <view>
          <datasources>
            <datasource caption='bilineal rostro_2_test_9_ecm' name='textscan.42202.468733310183' />
          </datasources>
          <datasource-dependencies datasource='textscan.42202.468733310183'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42202.468733310183].[none:Y:ok]' value='false' />
            <format attr='display' field='[textscan.42202.468733310183].[none:X:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.42202.468733310183].[none:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[textscan.42202.468733310183].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[textscan.42202.468733310183].[none:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42202.468733310183].[none:X:ok]</rows>
        <cols>[textscan.42202.468733310183].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Rostro 2 Splines K9 B4'>
      <table>
        <view>
          <datasources>
            <datasource caption='splines rostro_2_test_9_4_ecm' name='textscan.42202.469266122687' />
          </datasources>
          <datasource-dependencies datasource='textscan.42202.469266122687'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42202.469266122687].[none:Y:ok]' value='false' />
            <format attr='display' field='[textscan.42202.469266122687].[none:X:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.42202.469266122687].[none:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[textscan.42202.469266122687].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[textscan.42202.469266122687].[none:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42202.469266122687].[none:X:ok]</rows>
        <cols>[textscan.42202.469266122687].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Rostro 2 Splines K9 B8'>
      <table>
        <view>
          <datasources>
            <datasource caption='splines rostro_2_test_9_8_ecm' name='textscan.42202.469983993054' />
          </datasources>
          <datasource-dependencies datasource='textscan.42202.469983993054'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42202.469983993054].[none:Y:ok]' value='false' />
            <format attr='display' field='[textscan.42202.469983993054].[none:X:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.42202.469983993054].[none:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[textscan.42202.469983993054].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[textscan.42202.469983993054].[none:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42202.469983993054].[none:X:ok]</rows>
        <cols>[textscan.42202.469983993054].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Rostro 2 kNN K9'>
      <table>
        <view>
          <datasources>
            <datasource caption='knn rostro_2_test_9_ecm' name='textscan.42202.468164479164' />
          </datasources>
          <datasource-dependencies datasource='textscan.42202.468164479164'>
            <column datatype='real' name='[Value]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Value]' derivation='None' name='[none:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42202.468164479164].[none:Y:ok]' value='false' />
            <format attr='display' field='[textscan.42202.468164479164].[none:X:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.42202.468164479164].[none:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[textscan.42202.468164479164].[none:Value:qk]' max='1.0' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[textscan.42202.468164479164].[none:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42202.468164479164].[none:X:ok]</rows>
        <cols>[textscan.42202.468164479164].[none:Y:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Bilineal y kNN vs K'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42199.933647245372' />
          </datasources>
          <datasource-dependencies datasource='textscan.42199.933647245372'>
            <column caption='[kNN Timer Mean]/1000' datatype='real' name='[Calculation_5460714231351091]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[kNN Timer Mean]/1000' />
            </column>
            <column caption='[Bilineal Timer Mean]/1000' datatype='real' name='[Calculation_9850714231334498]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[Bilineal Timer Mean]/1000' />
            </column>
            <column caption='Método' datatype='string' name='[Method (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[method]'>
                <bin value='&quot;bilineal&quot;'>
                  <value>&quot;bilineal&quot;</value>
                </bin>
                <bin value='&quot;knn&quot;'>
                  <value>&quot;knn&quot;</value>
                </bin>
                <bin value='&quot;splines&quot;'>
                  <value>&quot;splines&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;bilineal&quot;' value='Interpolación Bilineal' />
                <alias key='&quot;knn&quot;' value='Vecinos Más Cercanos' />
                <alias key='&quot;splines&quot;' value='Interpolación Por Splines' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal'>
            </column>
            <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5460714231351091]' derivation='None' name='[none:Calculation_5460714231351091:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9850714231334498]' derivation='None' name='[none:Calculation_9850714231334498:qk]' pivot='key' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42199.933647245372].[Method (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Method (group)]' member='&quot;bilineal&quot;' />
              <groupfilter function='member' level='[Method (group)]' member='&quot;knn&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42199.933647245372].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_2&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_2&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_2&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42199.933647245372].[Method (group)]</column>
            <column>[textscan.42199.933647245372].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]' scope='rows' value='Tiempo (ms)' />
            <format attr='subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]' scope='rows' value='Tiempo (ms)' />
            <format attr='subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.5' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]' field-type='quantitative' major-origin='0.0' major-spacing='2.0' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_brightblue' />
            <format attr='boxplot-style' id='refline0' value='modern' />
            <format attr='palette' id='refline1' value='bp_red' />
            <format attr='opacity' id='refline1' value='70' />
            <format attr='palette' id='refline2' value='bp_brightblue' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[Method (group)]' />
            </encodings>
            <reference-line axis-column='[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' scope='per-cell' symmetric='false' value-column='[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]' z-order='1' />
            <reference-line axis-column='[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' scope='per-cell' symmetric='false' value-column='[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[Method (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[Method (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42199.933647245372].[none:Calculation_9850714231334498:qk] + [textscan.42199.933647245372].[none:Calculation_5460714231351091:qk])</rows>
        <cols>[textscan.42199.933647245372].[none:k:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Tiempo de Splines vs K y Tamaño de Bloque'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42199.933647245372' />
          </datasources>
          <datasource-dependencies datasource='textscan.42199.933647245372'>
            <column caption='[Splines Timer Mean]/1000' datatype='real' name='[Calculation_0710714230826451]' role='measure' type='quantitative' user:unnamed='Tiempo de Splines vs K y Tamaño de Bloque'>
              <calculation class='tableau' formula='[Splines Timer Mean]/1000' />
            </column>
            <column caption='Método' datatype='string' name='[Method (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[method]'>
                <bin value='&quot;bilineal&quot;'>
                  <value>&quot;bilineal&quot;</value>
                </bin>
                <bin value='&quot;knn&quot;'>
                  <value>&quot;knn&quot;</value>
                </bin>
                <bin value='&quot;splines&quot;'>
                  <value>&quot;splines&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;bilineal&quot;' value='Interpolación Bilineal' />
                <alias key='&quot;knn&quot;' value='Vecinos Más Cercanos' />
                <alias key='&quot;splines&quot;' value='Interpolación Por Splines' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Bloques' datatype='integer' name='[bloques]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Interpolación Bilineal' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal'>
            </column>
            <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal'>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0710714230826451]' derivation='None' name='[none:Calculation_0710714230826451:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bloques]' derivation='None' name='[none:bloques:ok]' pivot='key' type='ordinal' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42199.933647245372].[Exclusions (Bloques,K)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:bloques:ok]' />
                <groupfilter function='level-members' level='[none:k:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:bloques:ok]' member='201' />
                <groupfilter function='member' level='[none:k:ok]' member='1' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42199.933647245372].[Method (group)]'>
            <groupfilter function='member' level='[Method (group)]' member='&quot;splines&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42199.933647245372].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;geometrica_2&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;paisaje_2&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_1&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;rostro_2&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42199.933647245372].[Method (group)]</column>
            <column>[textscan.42199.933647245372].[none:name:nk]</column>
            <column>[textscan.42199.933647245372].[Exclusions (Bloques,K)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' scope='rows' value='Tiempo (ms)' />
            <format attr='subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' scope='rows' value='Tiempo (ms)' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_orange' />
            <format attr='boxplot-style' id='refline0' value='modern' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42199.933647245372].[none:bloques:ok]' />
            </encodings>
            <reference-line axis-column='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' scope='per-cell' symmetric='false' value-column='[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]</rows>
        <cols>([textscan.42199.933647245372].[none:k:ok] / [textscan.42199.933647245372].[none:bloques:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Zonas de Error Maximo, Geometrica 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='bilineal geometrica_1_test_9_ecm' name='textscan.42200.019915185185' />
            <datasource caption='splines geometrica_1_test_9_8_ecm' name='textscan.42200.002332152777' />
            <datasource caption='knn geometrica_1_test_9_ecm' name='textscan.42200.006737361109' />
          </datasources>
          <datasource-dependencies datasource='textscan.42200.019915185185'>
            <column caption='Método' datatype='string' name='[Calculation_3640715115619820]' role='measure' type='nominal'>
              <calculation class='tableau' formula='CASE MAX(MAX(AVG([Value]), AVG([textscan.42200.006737361109].[Value])), AVG([textscan.42200.002332152777].[Value]))&#13;&#10;WHEN AVG([Value]) THEN &quot;Interpolación Bilineal&quot;&#13;&#10;WHEN AVG([textscan.42200.006737361109].[Value]) THEN &quot;Vecinos Más Cercanos&quot;&#13;&#10;ELSE &quot;Interpolación por Splines&quot; END' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[X]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Y]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[X]' derivation='None' name='[none:X:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Y]' derivation='None' name='[none:Y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3640715115619820]' derivation='User' name='[usr:Calculation_3640715115619820:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42200.019915185185].[none:X:ok]' value='false' />
            <format attr='display' field='[textscan.42200.019915185185].[none:Y:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]' value='Método'>
              <formatted-text>
                <run>Método</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42200.019915185185].[none:X:ok]</rows>
        <cols>[textscan.42200.019915185185].[none:Y:ok]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Bilineal vs Splines Geometricas (Dashboard)'>
      <style>
      </style>
      <size maxheight='400' maxwidth='500' minheight='400' minwidth='500' />
      <zones>
        <zone h='100000' id='8' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' type='layout-basic' w='99200' x='0' y='0'>
              <zone h='100000' id='7' name='Bilineal vs Splines para Imágenes Geométricas' show-title='true' w='99200' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='26250' id='12' name='Bilineal vs Splines para Imágenes Geométricas' pane-specification-id='4' param='[textscan.42199.933647245372].[none:bloques:ok]' type='color' w='52600' x='64400' y='56750'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bilineal vs Splines para Otras Imágenes (Dashboard)'>
      <style>
      </style>
      <size maxheight='500' maxwidth='800' minheight='500' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99500' x='0' y='0'>
              <zone h='100000' id='1' name='Bilineal vs Splines para Otras Imágenes' show-title='true' w='99500' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='20000' id='6' name='Bilineal vs Splines para Otras Imágenes' pane-specification-id='2' param='[textscan.42199.933647245372].[none:bloques:ok]' type='color' w='30875' x='76625' y='15800'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bilineal vs kNN (Dashboard)'>
      <style>
      </style>
      <size maxheight='400' maxwidth='800' minheight='400' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99500' x='0' y='0'>
              <zone h='100000' id='1' name='Bilineal vs kNN' show-title='true' w='99500' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='15000' id='6' name='Bilineal vs kNN' pane-specification-id='4' param='[textscan.42199.933647245372].[Method (group)]' type='color' w='17500' x='80625' y='19250'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Error Geométrica 1'>
      <style>
      </style>
      <size maxheight='560' maxwidth='540' minheight='560' minwidth='540' />
      <zones>
        <zone h='100000' id='11' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='160' h='100000' id='13' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='11071' id='15' name='Geométrica 1 Splines K9 B4' pane-specification-id='0' param='[textscan.42200.525526539350].[none:Value:qk]' type='color' w='100000' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='50000' id='7' name='Geométrica 1 kNN K9' show-title='true' w='50000' x='0' y='0'>
        </zone>
        <zone h='50000' id='9' name='Geométrica 1 Bilineal K9' show-title='true' w='50000' x='50000' y='0'>
        </zone>
        <zone h='50000' id='1' name='Geométrica 1 Splines K9 B8' show-title='true' w='50000' x='0' y='50000'>
        </zone>
        <zone h='50000' id='10' name='Geométrica 1 Splines K9 B4' show-title='true' w='50000' x='50000' y='50000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Error Paisaje 2'>
      <style>
      </style>
      <size maxheight='560' maxwidth='540' minheight='560' minwidth='540' />
      <zones>
        <zone h='50000' id='1' name='Paisaje 2 kNN K9' show-title='true' w='50000' x='0' y='0'>
        </zone>
        <zone h='50000' id='2' name='Paisaje 2 Bilineal K9' show-title='true' w='50000' x='50000' y='0'>
        </zone>
        <zone h='50000' id='3' name='Paisaje 2 Splines K9 B8' show-title='true' w='50000' x='0' y='50000'>
        </zone>
        <zone h='50000' id='4' name='Paisaje 2 Splines K9 B4' show-title='true' w='50000' x='50000' y='50000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Error Rostro 2'>
      <style>
      </style>
      <size maxheight='560' maxwidth='540' minheight='560' minwidth='540' />
      <zones>
        <zone h='50000' id='1' name='Rostro 2 kNN K9' show-title='true' w='50000' x='0' y='0'>
        </zone>
        <zone h='50000' id='2' name='Rostro 2 Bilineal K9' show-title='true' w='50000' x='50000' y='0'>
        </zone>
        <zone h='50000' id='3' name='Rostro 2 Splines K9 B8' show-title='true' w='50000' x='0' y='50000'>
        </zone>
        <zone h='50000' id='4' name='Rostro 2 Splines K9 B4' show-title='true' w='50000' x='50000' y='50000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tiempo vs K y B'>
      <style>
      </style>
      <size maxheight='500' maxwidth='800' minheight='500' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='50000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='50000' x='0' y='0'>
              <zone h='100000' id='1' name='Tiempo de Bilineal y kNN vs K' show-title='true' w='50000' x='0' y='0'>
              </zone>
            </zone>
          </zone>
          <zone h='100000' id='7' name='Tiempo de Splines vs K y Tamaño de Bloque' show-title='true' w='50000' x='50000' y='0'>
          </zone>
        </zone>
        <zone h='12000' id='6' name='Tiempo de Bilineal y kNN vs K' pane-specification-id='1' param='[textscan.42199.933647245372].[Method (group)]' type='color' w='17500' x='22250' y='12200'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Zonas de Error Máximo, Geométrica 1'>
      <style>
      </style>
      <size maxheight='500' maxwidth='450' minheight='500' minwidth='450' />
      <zones>
        <zone h='90000' id='1' name='Zonas de Error Maximo, Geometrica 1' show-title='true' w='100000' x='0' y='0'>
        </zone>
        <zone h='10000' id='6' name='Zonas de Error Maximo, Geometrica 1' pane-specification-id='0' param='[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]' type='color' w='100000' x='0' y='90000'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Bilineal vs kNN (Dashboard)'>
      <active id='1' />
      <zones>
        <zone name='Bilineal vs kNN'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42199.933647245372].[Method (group)]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Bilineal vs kNN' pane-specification-id='4' param='[textscan.42199.933647245372].[Method (group)]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Bilineal vs Splines Geometricas (Dashboard)'>
      <active id='7' />
      <zones>
        <zone name='Bilineal vs Splines para Imágenes Geométricas'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Bilineal vs Splines para Imágenes Geométricas' pane-specification-id='4' param='[textscan.42199.933647245372].[none:bloques:ok]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Bilineal vs Splines para Otras Imágenes (Dashboard)'>
      <zones>
        <zone name='Bilineal vs Splines para Otras Imágenes'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Bilineal vs Splines para Otras Imágenes' pane-specification-id='2' param='[textscan.42199.933647245372].[none:bloques:ok]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Tiempo vs K y B'>
      <zones>
        <zone name='Tiempo de Bilineal y kNN vs K'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42199.933647245372].[Method (group)]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Tiempo de Splines vs K y Tamaño de Bloque'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Tiempo de Bilineal y kNN vs K' pane-specification-id='1' param='[textscan.42199.933647245372].[Method (group)]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Error Geométrica 1'>
      <active id='7' />
      <zones>
        <zone name='Geométrica 1 Splines K9 B4' pane-specification-id='0' param='[textscan.42200.525526539350].[none:Value:qk]' type='color' />
        <zone name='Geométrica 1 kNN K9'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Geométrica 1 Bilineal K9'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Geométrica 1 Splines K9 B8'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Geométrica 1 Splines K9 B4'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Error Paisaje 2'>
      <zones>
        <zone name='Paisaje 2 kNN K9'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paisaje 2 Bilineal K9'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paisaje 2 Splines K9 B8'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Paisaje 2 Splines K9 B4'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Zonas de Error Máximo, Geométrica 1'>
      <active id='1' />
      <zones>
        <zone name='Zonas de Error Maximo, Geometrica 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Zonas de Error Maximo, Geometrica 1' pane-specification-id='0' param='[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Error Rostro 2'>
      <zones>
        <zone name='Rostro 2 kNN K9'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Rostro 2 Bilineal K9'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Rostro 2 Splines K9 B8'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Rostro 2 Splines K9 B4'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window class='hidden-worksheet' name='Bilineal vs Splines para Imágenes Geométricas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[textscan.42199.933647245372].[none:bloques:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42199.933647245372].[Method (group)]</field>
          <field>[textscan.42199.933647245372].[none:Calculation_1520714234026857:qk]</field>
          <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
          <field>[textscan.42199.933647245372].[none:k:ok]</field>
          <field>[textscan.42199.933647245372].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Bilineal vs Splines para Otras Imágenes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.42199.933647245372].[none:bloques:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
          <field>[textscan.42199.933647245372].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Bilineal vs kNN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[textscan.42199.933647245372].[Method (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42199.933647245372].[Method (group)]</field>
          <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
          <field>[textscan.42199.933647245372].[none:k:ok]</field>
          <field>[textscan.42199.933647245372].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Geométrica 1 Bilineal K9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.019915185185].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.019915185185].[none:Value:qk]</field>
          <field>[textscan.42200.019915185185].[none:X:ok]</field>
          <field>[textscan.42200.019915185185].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Geométrica 1 Splines K9 B4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.525526539350].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.525526539350].[none:Value:qk]</field>
          <field>[textscan.42200.525526539350].[none:X:ok]</field>
          <field>[textscan.42200.525526539350].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Geométrica 1 Splines K9 B8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.002332152777].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.002332152777].[none:Value:qk]</field>
          <field>[textscan.42200.002332152777].[none:X:ok]</field>
          <field>[textscan.42200.002332152777].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Geométrica 1 kNN K9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.006737361109].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.002332152777].[none:Value:qk]</field>
          <field>[textscan.42200.002332152777].[none:X,:ok]</field>
          <field>[textscan.42200.002332152777].[none:Y,:ok]</field>
          <field>[textscan.42200.006737361109].[none:Value:qk]</field>
          <field>[textscan.42200.006737361109].[none:X:ok]</field>
          <field>[textscan.42200.006737361109].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Paisaje 2 Bilineal K9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.921988333335].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.921988333335].[none:Value:qk]</field>
          <field>[textscan.42200.921988333335].[none:X:ok]</field>
          <field>[textscan.42200.921988333335].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Paisaje 2 Splines K9 B4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.928968402775].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.928968402775].[none:Value:qk]</field>
          <field>[textscan.42200.928968402775].[none:X:ok]</field>
          <field>[textscan.42200.928968402775].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Paisaje 2 Splines K9 B8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.920957337963].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.920957337963].[none:Value:qk]</field>
          <field>[textscan.42200.920957337963].[none:X:ok]</field>
          <field>[textscan.42200.920957337963].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Paisaje 2 kNN K9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.921559363429].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.921559363429].[none:Value:qk]</field>
          <field>[textscan.42200.921559363429].[none:X:ok]</field>
          <field>[textscan.42200.921559363429].[none:Y:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Rostro 2 Bilineal K9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42202.468733310183].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42202.468733310183].[none:Value:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Rostro 2 Splines K9 B4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42202.469266122687].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42202.469266122687].[none:Value:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Rostro 2 Splines K9 B8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42202.469983993054].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42202.469983993054].[none:Value:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Rostro 2 kNN K9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42202.468164479164].[none:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42202.468164479164].[none:Value:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Bilineal y kNN vs K'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42199.933647245372].[Method (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42199.933647245372].[Method (group)]</field>
          <field>[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]</field>
          <field>[textscan.42199.933647245372].[none:Calculation_5460714231351091:qk]</field>
          <field>[textscan.42199.933647245372].[none:Calculation_9850714231334498:qk]</field>
          <field>[textscan.42199.933647245372].[none:Splines Timer Mean:qk]</field>
          <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
          <field>[textscan.42199.933647245372].[none:k:ok]</field>
          <field>[textscan.42199.933647245372].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Tiempo de Splines vs K y Tamaño de Bloque'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42199.933647245372].[none:bloques:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42199.933647245372].[Method (group)]</field>
          <field>[textscan.42199.933647245372].[none:Calculation_0710714230826451:qk]</field>
          <field>[textscan.42199.933647245372].[none:Splines Timer Mean:qk]</field>
          <field>[textscan.42199.933647245372].[none:bloques:ok]</field>
          <field>[textscan.42199.933647245372].[none:k:ok]</field>
          <field>[textscan.42199.933647245372].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Zonas de Error Maximo, Geometrica 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42200.019915185185].[none:X:ok]</field>
          <field>[textscan.42200.019915185185].[none:Y:ok]</field>
          <field>[textscan.42200.019915185185].[usr:Calculation_3640715115619820:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bilineal vs kNN (Dashboard)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAbkElEQVR4nO2deVRb153H79skPe1CYhFilQUChI0BYzvYju14S+wkTZukTWcmTSdNm+l0
      mj8603M6f8xM+s+c0zMzPSftnNNpm3iyNstkqR3XS2wnxuAdr+CYxSAQmyQk0C69p7fMH9gG
      W08gkBAS3M9fxvenq5/0vrrr7/4uwvM8gEAWCrrUDkCyGyggSFJAAUGSAgoIkhRQQJCkmCkg
      zjXcd+3atRudXZ4gDfjoQM/tAM22Hdx/dShI+cd7bI4EKw1N2j758IA3Ordl1O945/0Px33U
      1J8jNhvD84Dnxgb7xn0ht30kQLEAAPdo/4g7MM+PBkkHMwXEXjry/uvvfnLgo7def/9omKM7
      LrZ7IkzfzcvuIBt2D13qtCZYKRWcvHXrdpSb25INea52dlHMHdMTH/zm07YewEVPH3z/Yq/9
      0uH33jt8IcqBqyc+OHFtaL6fDZIG8Pv/5PPKzNUKjxMnB6+cbrvcV/sUDwAAHHP44KcO3VZH
      58n/OXgxMulSG9e99L2nQwMX3/3w0CQre/KvX9xQTP37v/02IFbu+fb3G3Ona2T8w//9x0Pf
      fflFpufkZ71kHdF7oK2ratuzLz2x8Z6Nz9712zfbHnv+B4ANt/z5vYqSn97xhqWunDpUaSxa
      9K8BslAeHANN2m12t3+gv0tRXiULBymOBwAAFG9aWzM+4WfCfodf8oOfvozZrl3r/vrdNz8W
      6SurC0VvvPkxR+bv2LXVmAP+cuQ0PaNCXK636Pyt1/qPHDrV2FRn6+8xNu7c85Bl2iLieut3
      f8xf/6hRRwIAmnfubPnk/fHQnTapdkOz9ezhPldoUb8FyIJ5UEA1zXtfeuFZYtI+EeUJdLpU
      SpJT/5AotEUlpcU6KR0O+SN0lKYQWf7WxqqLh975/GIvBwBL0ff1XQi2affujgN/7JPXry9T
      P/v3/9KUH3z9d//rpu4aMKC00tjZfinM8AAAUrvq6R01nd2Dd95ObXhiV0NvN+y/MpQHBXTy
      nf/40T/9Kr9hk1GrmPoflVI1OGh78HUIADLDN/dutHVcPHHyZJ55bZ5W6+y7cXM0iAfHAizJ
      0JNu751mQ5q/ep0pf9+Te1Ce/eLd137z5ueYOk+M3a1Kpnviue+vojoPtHXxAACAFK3e+vxT
      W+6WI7pVTS98e7eUQFL/6SFJg8zYC7tvWwxBQNxdMgSAxDbQEAQRqHpGkeBOHILM9Gr6z3u1
      QTIHBG6mQpIBLiRCkgIKCJIUUECQpIACgiQFFBAkKfC5TSAQIdzdbQe6USggyAKJhrzugTHY
      hUEWTll9MxQQZOEgGAlXoiELhOcYlkehgCBJkcoujOMSiEHMJLLR4Uz7wadSQBMTEymsLQ1A
      h5MHDqIhSZEdAqJDoQjDAgAAYO125+zNuNflCDFL3DdFw+FwlAEAAMA6HE4uvsN02DdotU4G
      qXT2THRw0u2LPPCfXDTicLrZGD94npt0OSKMcFXYq6++miq3QqGQVCqdy4oPecYHhuyBEE1K
      EJt1gEbEEpS29lvDHCHmAkNjznG3N+Adj/BinA1YB4Yxgmj97P0hQKJh/2Qg2Hd7sLQod6Cv
      L8QRJEr19w8ymEROiqZqH++//Jv/+kN+0/Z8KTa7H4k7HPa6rDZ7IEiRJDZktUZ4gsSYAetA
      kEXFfHh41OFweUPe8RAnEvFh68AQghMX/vJ/t8M4QYcm/EFrn63IkGfrv+1ncBke7e+zUohY
      IRVP1X67vaVnaODUNXtj7Sp0roC5KYfnG1jncYyMOJ3+EKeQ4cMD/e4gS0QcVi8hoSds9gmZ
      QulzDg87PRKMu3V7SKuRDg7YgEhGinEEAMBzgx2tv3/j/bLGR3JIgcrTvRLNM9TRjz+QmVbf
      ON+9vlF9tctJo5rVuiilq7Af+XJDve54LyF2XCxp2Dxou1opHb89wYk0ZSqfVxVyvPHJxWde
      eOrs2XYDPnbOqdJg1rJC/EpH/yRf8JMXnyQAAAC4PVShXpNKhzn2+MfvERWNHS1Xm7cYLt4Y
      YYC8zoD75SWe3i/Xrsk/2cPLHBcK1+/o77m0Vuu9Oc5hMr2e82Ih11tvH977nW9cuNCej42d
      sSt1aJ+/XNp+3eoMK1/5u2emJG/euJNt+eimk128aMvLxz4YUNZyQ/0PPbLu5s3+m18PP7e7
      5EaAu3b5A59Sv2HbPnf3eWvPgGXL5uvXbrv7Lo34KT9e+rMXn8RRBPCsJ8Do89TxKk93F8Zz
      rNfPmsxGkgDjDmeBaXXj6krPpLfMXK3g/T6Kyy8x6eSYwViFUF67219Zt85iXqVVKHS5OaRS
      YyrRIwjwjDvzjJY11aXD1iFSqeOo8L0eq6qh2aCWpNRjftJDV1SZpCLgdjpyyy3r6qr8Hm9J
      RZUaC3kiTF6RKU+BGowWhPbZXZOm1Y2rqyu0CqU2N0cqV5tKDRgCvOOO3LKaulrjiNUmUup4
      OnTP4ZHOlg/bxp5+/GF0ER8FlldkVKFh60B/GFGIeYrhAUCQsupqIuzv7esecYRzFJJwNAoA
      Z7e7yi2N9dVldwSNEmvXP5QjJeJVnW4BIZioWC86dfJCmCfWbdsl8jsJhXbX3j3WCy26xt01
      RqOxQF1urtMq5OYay86d27z2UZVOa1pd5R5yV1VX4ChhsZhrt+6LdLfcHPGXlpUiHDCWFs6c
      jxtMVWpx6j4XipaVyL/64kyIJ9Zu2SWPuBBZzvZHd49dOyOv2VpnMhkL1SVVa7VyabWlZvuu
      XQHHsEKnNVrMvlGXqapShBHVNebabU9wfac7bJ7SslIkypjKi+857HCOFxfl9vb2LeqSgu3W
      JbLyoSZLDcmFV1WaJTnFRr1aq9XmlVWtq60uypNJ84s0IgLHZY/s2+MfG1bpctF7HSWClZrM
      CpFwzalcSHS5XDqdbg4jnu290nrN6tab6prXmlLynJmQ5/TpFk+IBUC66dHt+XeHF3OSmMOc
      9XrbpdvjeWW1D68zp8RhNuJrO33KHWAAIDfu3FaoFBpcCOFyubRa7XzHQF3nvuLL1lbP1bMP
      XD/dTxdsbarEAAD0xNEjp0Msh+Ki5h2P58nivirtAsokstHhBQhoUZkWEMMwHo8nmboSm9Rk
      ENDh5JmehWEYptVqk6wu+RrSDHQ4SaYFlJKGMaNa10TIOodBhvkMIxIzC0+UCbDC8zG9OO5c
      egmBAsos3h51f2QX3jE91FCRZmcSAQoos3ilNP+V0vx4pa50upIYia5r8BzrdIyzPDfpGLIO
      O6JUyOHycFzUbh9nucyKUIGkk8RaIJ6zdp758IveH7/8+PGWcyQOQubKS1/b1xiwsGxVbl42
      LaUsIb3ByHCEFizapJGLFnMvY/FIsAtDtIbKArWVCntEqmKTaNzm9tj72ulow/PPlmEo4vf7
      AQDRaAJpNVcw7b7gcZdPsGidSibKSv0kKCAEkcvlCAA4LqapYAjnlHKJrqyhqQicv2nbWlcm
      EokAAGh2/obSxnf12u/qM2sVJ3kSfeQIRlRWVcrVhupcxIkU1Kwqrakst2x8RBZ2RBhWLBaL
      xWIMmzsEB7LMgHthWeZwpu2FwU4HkhRQQJCkgAKCJAUUECQpoIAgSQEFBEkKKCBIUkABQZIC
      CgiSFFBAkKSAAoIkBRQQJCmggCBJAWOiMwvPYWvw3KhgUcEv1qfZmURY5gIKMCwVJ2Q7h8jE
      6CX13nL13vK4xeE0upIYy1xArw06PnVMCha1bahOszPLEhhQlmUOw4AyyLIiVkBUb+ftSc+E
      P0IPdVy3h4SPoUAgU8SOgejBHls4OIYaLMDhIEsrl8CpZUrUGWI9lGCR2KhC8KzsDQQG0SGv
      vStEoxM0P2yvz8SZY7ZC23zhW8Ln3kUlimUjIGnTw+tcNBtyDgWq6wpliaaLy0wom49xP5gQ
      eQrpmtw0OyNbVyBbV5DmN11sYgXE9XXezF1jvjzolUvDYbpGSmblL2MKxhWhB7yCRdLV2TT/
      ylhiBRQNMwTldFSu3yQauOZnGC3IxLQ0AIDTE/6uoPDK2t8acgkUAQDIGvJkDXnp9WtlESsg
      sqY2/0JfcNda2ZURzWoyc7uwIMu5o3ES8AMegAxaLFnGxAoo0nWjy+4KfvDObRRRmjc1FuBx
      MgQvNY/lqh7LVS21FyudWAGJzXVr2P7RCBXVFlVoiPsMeDZyseXL4TCxqb7aNh6qM+d23Byp
      W2shsJX+c+d4fjLKChZJMES2fLMGxAoI0RaWVWFEd1evrfd2Va1JjE0PopmQt8se3rd3MxkZ
      vd7R4ejHajfvgeoBAHgZdnd7t2DRX+m1/1i+3CZf94gVUPj4n95od0QrK40ycUwHQUjrTAUt
      n/+50FzhHhsgiirVMjEAwO128zwfiQhPmFcCGgK/3GxZai+WgFgBSXY89+KmO60xpry/C+Oi
      YZoTaZQShmELjA2P1qm/bG1/YteGqeTFLlcG5vCDLC6xAkJlSnW8qxFEshxD/qRPt9FoyDEa
      qbwCTbNkFPBLM+WJusKcX3irTlSqROa8fAuSCuYXD4SguKHcbAAAAGAg5QAAfVHRIniVEJHu
      iUiX8M6A7nsWAAWUFrI4oEyxyaDYZFhqL1Y6WSygtOGJMk9c6RUserYgZ5a0zisBKKC5UeDY
      n+pWCRdhWbxRmBKggOYGQ5BiSYYuxy85K/0HBEkSKCBIUkABQZICjoFSA0ex3r/0CxaJTer0
      Rz+mDSig1IBgiKhMKViE56T0HvsMAwooNSA4KmtYiQtCcAwESYoMbYHG6egPOwcEi54pyPmb
      wuV25032kqECUuHYL03C+1x54nT7zDNcvF1bTEuK9PFiF1YEGSogEYrWKaVL7cUdeJYLdwqH
      OonNOVBAkDlAxXjOc1VL7UWGAgfRkKSAAoIkBRQQJCmWYAzE8rwnzhEqEkOlGAoA4EJR30mb
      oI24QkNW5Syif5D5sAQCctLRxy8LB/i9WKT7SUk+AABgKJ4nPAvDZKk8qx9g2F/2CWdF3aKR
      P5mnSeF7LUuWQEB6sWjOI1SoGJNv0KfBGQJFNqiE5+ElkszNC5A5rPRpvBhFnymAHeLCWYox
      UICe+KhHsEhalytrXIlbktnLEggIleDK7cWCRZgK9hpZxhIICMFRcXmmpGXhwsz46x2CRdK1
      uYotS3ZsMltIsYDsVPTZa7cFi54v1P2oOOMC8xAxlvMds2ARSq70AWIipPg70onweEeolBl5
      hApBESLOegHkVMfYmVsOwaJ/2FejkolA6rswH429dkWwBNlsAI+UpPjtVh4sD/YPOwWLqmTk
      wzkKAECU4X714TVBm3qTbt+GkgRtNhDitaRC0EZx97qFFN+VodVq+SgnWIpgCJJhjVCW3pUR
      jnP/EI4AEYoCAHiej/sUUGQqIXUiNomQ4hYIQRBEtGzTuWUI0rl+h4k8hVQ9qcxqEiBZx0IE
      xHNMMBDieNbnmfCHqNT1gZDsYwEC4l39l/e/ecgx8vWho19+dug4xQp3pZCVwLwFRAdcN61O
      jUruGh0tXb1ZEXX5KCYSiUQiEZYVDtKALGPmLaDJkf7+IftAX487SFFUmEVxEYqyLMswDMfB
      pmjFMe9ZWL55w4vG6jNnuuuaSlu/OC0vXi0XYzgqAwCs5DS/KxZ4Z2qWOQzvTIUsK6CAIEkB
      BQRJCiggSFJAAUGSAgoIkhQw6C7bYPnJg8Ixn6IyVfoviIUCyjbQ+MkYdUuQjBEKKNtAQEYl
      Y4RjIEhSQAFBkgIKCJIUUECQpIACgiTFvGdh3rGeo1+eY8nCPZtWHTvWiqhLn963VQSvjl+p
      zLsFUuSv2txYEQqERq29xfW7xEGbj4ouhmeQrGAh60AFFevLuz4cdbPSu5mZ3G43z/MwIjEN
      MDz/n1a7YNFahfSx3HRnrZi3gHxjvV+cvkxhqt3rq748cRyoS5RiQiTVAgBcLuFs3JAUggAk
      hxA+ECi7e+CQZznvYaugjahUmdq7pwRCWulI0BeIyFWqoN2OFxSoiERFlo0RolnncCIhrTzL
      B9uFWykiT5ra3Dqx4qDOHjnoZhFvkFWo9Y/uTUeiQkhqQTAkPRkmgZCAaIbPf/SZ+mPvnduz
      b5ss4UP2kOyCZzj3+12CRZIKjXxjovqLFRDGUWMHPxqbmPB//unRnd/YpROnMq0uJFNAEfn6
      AsGSeSUajBWQyFxfNx6IACMAQCxB59cCsX7a/d4twSJpQ558PewQ0wHL86cn/IJFhRLCLCMB
      AAiKSMwpSE8rMEAmxBIJHbV23xwJSE1rqudVHUri6seNgkWYQrQQByHzh+H5d0bdgkUP5yim
      BJQqYgWEigje4XCvaty+u0QvnucYCMFRUZFwTitI2hCj6P7V5bPbMDz/Z8ekYFE5KW6Mk3w9
      FoFBdPfVqwOuiNM1fv2CfOc3H82VwDHQMoTj+fOeoGARD8CUgPynhwNnhe+ByPtx3dRQKVZA
      4nx9UW5jSdep4z55gQKH6caWJyIU/c8q4Wzd95Bt1Evj5H2/l8I2VkDBQVvAnONASzdYgkP2
      EFWmTGWXCckiUBEG5kqDFzvEkZBi14EvOi3mvAGnV57wMjRkZSKwDmReUz8JbDhC7PnWN0gS
      DoBWLifcvnjLAT8ry1cTOBASULj93K1V9eXnW2489a0tMMxnJaMlcJNUeFERv7sfFysglmNw
      XCpmfbbhEXthQZ44w5I7Q9JGvVJaP9fl67ECkqyq0Q/3OgvKVIO9gzm5unkJiOa4W0HhqKA8
      EaGHuyLLjlgBEZVrmyrjvyAwPnCqrZ0h87ZtqDx3qg3NrdjRvAZH7zRoXob9194RwRc+U6B5
      vjCbYicgiTDvSRZOqrfs3nvxxOedV3yi0sbJ7jMByqK+uyqQKyIONFSk2slFhGc4qt8rWISp
      xfAeljmZt4AkMoWr54bEUJvLDLvEJMYxNMdlb0grz3CBC2OCRWR1DhTQnMxbQI7e9sNt3aZq
      iyI//8qlNobQKcW4RJatIa2oBNc9X7PUXmQx8xaQptjyzSeNAMXVKsW+nBJELIPTtJXMvAUk
      IuW5pHzq34RmIQEljJdyxrlTTL7ZoIR3imUVS7BTgSlFBb9YL1iEwAOK2cZSXLqbSXeK8Twf
      iX9/GzHPgMwVyBIIyBNlfj0gfBPnwzmKnVolAIDneC7MCNogBIqmTn8eht10QTgG93uFul8Y
      YQzuHCyBgHAEibfDor17ZI7z087fXRe0kT+kV2ydI5AlcTQE/vXm1amqbQUC78rIMofhXRmQ
      ZQUUECQpMjTgMMJy5zwBwaJSUmyMM4RaJLgw43rrpmCRdE2uvLkwnc5kGhkqoCDLxTvZtC9X
      lWYBISIs3mE3VL7SD7tlqIC0InzOk01pA8GQOQ+78QwX6hDeCiRyyWV8Vi5DBZR18CxPW4XD
      QhLRX/YCBTQ3YZZ7Z1S4damVS5s1cgAAKsY038qmQKhUkcUCCndPREeEB9qKrUVI6mIEeADc
      UeFl8RC30m86n7eAeJ4PTYxYJ4GlTHO+pRXXWxqri9ClWNqKcnyYFb5oPLUdhhRD/9k4x1Qr
      xHKvDQrvzzSpZFP7M8uSeQsoGvK2njg4JmvUhHq88jL/9dYq43cUkiXYHP01EfmIFD61dBmA
      qeO0oRvj9KBP0Eb1WCoH6QgA8VIXSu/uyHIUyzPCikeleEatLyfO/OOBZOp1TetOdvORSFSp
      0IRZKsgytNuT/pDWV02GV02G2W18EtSrFP6MypQ+LxJDXy6e466uQOtwsF24lcp/pR6RZuWR
      lYWPgVQ56o7+3gihVBKENFNDWt8h6AOSkGDR8TS7AoByZ6lyZ+nsNqGrzkiPcNYV9VOrFsGp
      ZFmIgBT5pk1SoMuT10ZuobU1JJG5+yE/L9f/vDxuSIZwdpMlBS+Qxfs+UzgtSCELEZBYllMk
      AwAAU21dit1Z1gyGqbE4Wf0blTICRQAAIr0M6BNN7pQJZPE0PutomfAfdgkvNv7BUkagGADg
      jeHxz50eQZu31ghvpywtMB4osxweidAuWnjNySInPRPuTIsHgi1QZmGQiAySbNqgnRYQy7J+
      v/CySoJEIhGPR7j5zUyy0WGvV7gTXCqmBYSiqFwuT6auaDT6QA3hcJgkpzPk8Tzv9XrVavXM
      lyAIguP4vGwmJyc1Gs0Dbz2nzQPOJOJwbD0MwwAAZr5RIjaxziRikyqHeZ4nCGJeNh6PR6VS
      zewr49lMf4AHHsACiK1BobhvU4HjOBRFZ9rEvmMiNrFvlIjNA84szEbwK5rTBkEQDMNmPo9E
      bASdScQmeYdRFMUwDJ1xqimuTWztKYTjWJabXrxHEOT+nwvPMgxNR7kZA/kYGwAAPyX/e39L
      pfflPOBYhqIoiqK5+DY8x9I0zcY5Anafw/fvr91fD8+xDzoc+15Tn2sWZ6Yd5uZ0WHjrY6ZZ
      Ag7T83WYJMmZMuW4Ow7P/AKnbLBXX311dhcTJxQKzfSMpQMnPvx9T7S4svDOViKCIPe1pWyk
      9ejhtvPngLpcryGFbQCgvKN/2P9eWXW9XHxns+nBBnm4q+XMuaNfnC2vXaMQtuE7Ww8eP3N1
      2M0ay/X3jr8+6HA01PLZ/g6ftqp4+sj2ffVw1NkvDrdeOE9LiwxambANALTfuX//W/qKeiU5
      7czM5+Eb6/2q7eyxY63FNatVElzIhu8+f/jw6cs2B2VcZXjA4XtmXDR85tDblxykpXz6CrD7
      HY5ePHHk9MXzQTy/JE8pbANANOh+e/8bamO9RiroDAg6+r9sPXv82Ff55jWau1suUzaL2ALR
      VDQnPxef5TePkZsf2aYgUJaP+zvj2ciN670K1WyphnNKataZS5p27C6Ie5sC5/WFaxvrXdav
      g3TceqI0rc7LJWb5zaOSh7Zt14jRWRoGnqU6r9+SzprpXWUwb7CUr314Z5FaEq8arzdQ3dDg
      H7rli7/ByDBR5RwOi5q2bdeR2GwOc9Fb1zvFytkiGOQFpk11FZaHHinXPvggFlFApEKjUcya
      X4djggyxvbm2p3cg3ucLumwdPX1222D/mPAOEQAAANY65KgoL4q/PIJZGprCEw5MJJ2l05bI
      1NrZU/xzbDCKbWmu7+/rj+dweHL0RlevY8jWNzLLziA7ODBiMpXFdxitqt/ATNoBIZ0l1buI
      VOo0s857eDZIgU3NTba+2/EClyif4+rNHuew7faQ8EYvAAAAbrB/wGg2xTq8uOtAYplaicRf
      1eCZrsut/Q7/muYd8R6rPL/yxZcqz7ccqSyKnwmEDfF4nlo+22cJeF2jw+Omho3yWfe8RVKl
      CsSP2OfZ3mtnesa8lqZt8RyW6sq//9IP21uPFpfEv1mSjUQRnU45myshn2t0xFVa16icdVWI
      kCjVivjNM8/1d5zvGp6sqt8cT4cSddELP/zR9bPHdOXCtz8BAABHRficCrWAK3AlOssczrSV
      6Ezc4IVkEakUkEiUTWvwADqcClLZhUFWILALgyQFFBAkKaCAIEnx/wr/N4ZjUR4NAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bilineal vs Splines Geometricas (Dashboard)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bilineal vs Splines para Otras Imágenes (Dashboard)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tiempo vs K y B' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Error Geométrica 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29d5Ql133f+bkVXug8HSZjAiYhEJEZAIMoggESKYmSqESv7VXwer3rI++/
      6z/EPT67Z9dnz1qy16J3ZZlaiSYlSoTEDAIkiEAARCDiIAwGgwmYPNMznd97VXXv/nGr6tWr
      V1Wv6oXuBma+B5jurrrhVzf+0v1doZRSXMVVXIEQQgij10KUW+PM+Uv0cxY1VhaYnVvqY4nv
      XFy6cI6a4w24FsXchXPUvWK9fPHCeVxPDoim/sD8l7//O3/053/+X/jRQ48xvet6pseqhQpY
      mj3FhZrFqLnCwcOn2DwzGb579ckfco4pZsYq6QUoxcWTh/jOwy9xw/5dCODocz/iR4eWuGXv
      NmpnX+NrD77Cjbsn+C9f/nuq8gwvnYUt5nn+6v7nufW63dBY4D/+p79iz64N/OXf/pCtYy5/
      +qX/zHOHTvGum2/ANkSXzTNYKK/BQ9/9W772jW9x6PQSt9ywByGK0Opx5PU3mdq0kTcPPo0x
      to2q7b+pzfPN+x/hun3XZpfg1Lj/W/diTe9kYqgESvHlP/k3fOuBRzizYrPFvsxTR+Z44b6/
      ZeLGW3n0uz9k1/69mDnI/Ku/+M/su/HdVEomrz/5fZ44VufEU/dx2Z7h2fv+mq9/+36MiW3s
      2LShwDf3D1/84he/aH37G9/gQ5/7XdTJF1i4dIGfvPQjHnnuMLd/9BfZZV/g7+9/jM3738v7
      rxF85ycv4UlBiRqTe9/Hz103xte/eT/DW67nwMhFvnr/8/zK53+dlx9/CGNiJxPuUW7deAsP
      3PsVnn7tJJ/61d/h1Ye+zomFCv/kD36XmWEbz1nhRw98jzcbO0LClPRYmT/HV/7yq9x91w38
      5P6/Z++Ocebm5qkvWXzz+19l2xc+ydzCsp9BMXvhLF/56jf4zG//c47/9G/Y84FPc/mF7/Pm
      mUVu3D62Jg3cCZdOHOSZtxT/4vf/Mfc/9BxnTh/hm3/7D9RLU/zmr/0CD3zjv3JizuNzv/N5
      Hr/3Xs4tLDAysYGLF+f5wh/8Hs//4F5eOzXPh5XiW3/2JYy9r/Hx3ZInD89y7c5tHF8wuXji
      Nb7y9X+gsukAd9+yia9980Hedeen+MxHbgPg6MvP8PBPn2f3Bz8Z0nV5fpndu/Zy4eIlnnvm
      FZytH8DzPM4eeYU3Tl9m19MP8N2Hn0MaVf7pf/sFHv77r3Hkwgqf/tXfYvHQwzz4syPc8xv/
      FM9r7kzOyhKvH3yE0uh2/tmOCvd/bY5f+eUP862HHufOm3avetsHMJYbkunxEUpWg8cffYx7
      v3Ufnlvjvu9+n+888BBf+Gf/I41jP+Xo6Utsvv4utpoNPvn5X+f0oZf5zjf/jvMLDV565DsY
      G/fzrvd9jLtu3MYS4/yL3/9trt22kfMnDvPMyQZ/+If/kj0zNq6yOHX4GV57aw4AszTEZ3/p
      F7BjhD31w29SH93OaMngmhvew/mXH+fCkgPAe++6k0fvvw8vIr40Fs8wN1/j7Ow8N93xCVbe
      eIxnj1xiQ8EdbTXh1FeojE1SqQ5x9Lln+dED3+LQyUucfPVpvvMP32Bh8mb+m0/fzkOPP825
      c4t87vP3UGeGu2/dxGMPPsj3H3uelYXzPPjEKxzYu5N/8o+/wMLsOd7/6d/ms5/8KLI2x6MP
      fJP3f/b3+K3PfoxarYbwVnj4sSdCGvbccifv3r+tlTDDZteBG5k/+gIzW7YxO68Xmk17rkVd
      nmNp4Tw7b7+b9+4o8fAD93H/U6+wdPkM9z/4KLWGpD53lieefbnte0+eucD8xbO45jif+rl3
      ce/f3MvI9KaBtnEnGJ/4+J382b/7t/zD/U+xdfcebrrxAJXqKL/+G5/n1v07+PKX/j2z5jYm
      q1AulyjZZUrlEpZhc+PNtzA6VOX9n/5Nbrl2I6dffowf/+x1StUqls92VDZsYmT5JH/87/8D
      Tz/7Ai++cYqpqUkW5uYzCbvjF38HdewJDp1dAMPmk5/5HNdMjwBgVTfwy5/7JcYrVpi+PLGL
      P/xXf8AP/+YvWClNsWVqjF/8jX/E1rH41Fo/mN51MyOXnuf//A//L/NGhRtvvJnpiRGuvflD
      /PIvfYpLLz/Mn3/jx1y/fy+maVGulClbFiW7xPjmHezbsZmRDVv5/C9/iqnJMb7y5b+kphRD
      Q0NhHQeuv4nvfuU/8pd/932ee/ZpVGkEo1HHyWLn3SUe+fFDlDdsp2IbgKBUhstzK2ESy7ap
      VipMbN3Nnm0zjE/v4HOfuoNnnn+R8alplufnKSuXuZoT5nnvR3+Rn9tf5u/u/xm79u5lw5br
      +Pwv3DWAls0PoaRUjuMgFdglG6SH47iYlo1pCBqOg2nZGEgkBkgPwzLxXA/LMmk0HIQwsG0L
      x2kgDBOUwrZtPNcBwwLp4Xoetm3jug4gMEwLy9QyuFIS15VYtoUApOcilUAgUQikgpJt4Xke
      AoXEwDIFnicxTV1fw3GxbQvXdTBNG+m5mJZVkKdefUi/vYP2cJwGSglKJRvPdfGUomTbuI6L
      aZl4nsQwAAxQHo4rsUs2QkkcV2IaAmFaGAJc18WyLJxGAwwT0wDXlQghsG2boGlcx8GwLAwh
      QCkcp4GnwLZsv71BKAmGiXQ9DFOgMPxnBsrzcD2JXSqhPD2WhDAQKAzTwjCE7lMMTKFwPIVl
      CqQS4RhYCwghhLiqBr2KKxV9UYNexVW8nWGdffWVtabhioRh25RHR1mZnYXAinJ1Lx4sRPOX
      4U1a+LaMs6cxlhcxXBdlmgjX9RN16g2RkCb6LKhNZaTvBvFykv6mi2edyk2jJV5uWlKBsmyE
      08ArVTA3bsI0TYwzJxGOg+H6wqKUiOiEKCrCJORR/gORRGeYvsP3+ukUwi9NJb4vjE754u+T
      0ueoWxmm7gPDRNol7JkZACyUQihQto0yTJRpRbOlFBenKP4sk5Sc6fLUW3Swp+XN08JZ9GR9
      kwh/KMPE9DyMRr2laGWYyJKJEi050qvv9NmdBlQKiXk+I7O8vMMirfmL0p5z/VECAonfaDQQ
      nhu+s0AhbRtlWrpjpNf9bL6KFAiQEsoG7vAownUww1cCw20gS2WE62I26qAk67oD0iZg31m4
      HAOx0yQQoISBMi2kZSFLpQiXAxYKhPRQdgnhuShhgBEtuQixefPlmWH93lOL7J1Zu0cXNAi9
      8khTd4ThNFpTGyYIAwwDd2gkg64rDX1sByV1cUpp9a2PCL+jUKaJrA73p8KraIGybIRSJC1V
      Siv2EU4DVRnSkwHgitdQ92nwCwGe3/b+JAhgtVSU1OBShltydOZcRTZUYGVSgGXptlUSMAsO
      bOXnDQrrFQPhVfqMAsqFtPxBERFNv0C1lRiVeNvmm3AamEsL+g/HAcMo3n6+dbHt93gaaH2X
      9Cz6POtd3gGWRE+icispXcqz4FfPQxkG7oapsNhC7aYURm0Fw6mD6+qF6Co6QwCGCZaFVx1G
      GcLvFxW+jsJqfRrpQNfBmLuE/erzGOMbQCnU0kKzEzsNMkO0bTehQkSpUDXXMmg7Ta4sTaUQ
      4SNdXAf64pMlbdEJ6shLmwCBoLbvRrzxSazLF3EnN6ZkSmaJ9IqvqBx6EcNzUXYJXEdPhBQ2
      qo2YkN4k2SztWdEOiL9r+YgO5UTSFV24UukSYJioDVO44xuQdhll0bpoxkizSIOUUC5jjG1g
      +cDN7YVcRSaMeg1MM3nl7tSUQZ5yhcb4JM7MZn+BEPl2kayxvh65n37TpiTKskAYmCtLeNX0
      YZ7+JiDIbYQGBN8L6ypyQLlOxsuU3+MP/Z1ACQOE8tv/6kKUCaUwHK/JYcQWoLheKTYBWntD
      ADQaCCm1gezqLpAfwWLR1aomtNVWeuA5mp3ESNjK1+Nyvobw20dlLNTJMkA3CLUaIOQV3hHK
      XyASGz5D6O9UrL8DpLxs/XnFQkXYPNH8v1MeH7EJUGCFVwrz5HG87TtRXRnO3iEQIBwPw6lT
      PnealWviZ3AT2qUP6mRzaQF7cR5nXJ+nzZ4GLdqCgIicNeV1N+kXigjmAiElhlPHq+hDQLKc
      cf48oY7udwApYf4S5sIEpfOnwfMS6MzSQGQRlqCKydRq9IIcGpWMPMq0cDduRZZKBepMoz3/
      N4lGXWvqaiuYjZqWE65AuMOjSMtGSAnKA1UulL/7CSDAPHUcb+MWVnYf0LrXKxFKUT53CmVZ
      MUfCLPQ+eUW9BhfP4U1vQpbKKNPsS7lvNyjTonT5Au7wKC0GsLT0oTerRqYQ3KGkbF37O5k3
      beMxY7aEjvnTXuRvM+k08C5dRJYqTb5XKd9yr3zB+R04IeI8vudhLi81J0Cn7LE27n4HSKvg
      xBGMkTG8sQn94J0yDwQgBMbykh50HVmeAQ++UED2+WSlNEvk+J6l9QaG57wz2t/36DRcB2WY
      uKPjsQTdf6TVmr9ApwkSD5wbjTqUq5i1FW0MSnR98H+uRed0W7eSKLuMu7QAI2M5JkBWWe3W
      8cII275ZgFlbwWhogdBqLCAjqmuhPITnterF12KD6CTCRfvFNEPWTnge0i5hLS0mTIAC1atM
      O0DRwvRhmiQYK8sQPfgBmIvzWJcu9FLl6sHX1DS27NCuCNIDpbDPnMTdO9bb3B2UPUVJXxhU
      WIvzmi3w/WDM5SXsSxdhYS4yCtbhDAh2NcNATW6kMTEJholwHZRpIZYXgM35q4tVE296KylR
      biT5pfh/ymoVLxL0SNRrSLuEu3FLl5WtLrS/kv5Eb3I65K0rzz+Jyw05SujD9pZVRKoMpl0m
      GhNTeNXhcAJ4po07NNJyGGRdigiRT1KmiTc8qpUL0sM+ewo5d7nr8oI/C+4A/ehIhXHsMHL2
      POK2D/Ze3mpAACvL8OSjcPdnI8+LusOmOLtlvG4ho0tlQnAGVtMrqD7/JI0bbkVWhzrmXXvo
      Ni69+gLs2oc7qc/v4nnZLiY5S44ihxaoP8uEsCzMoWHcXIaK9QGxtIhwG50TDnApVX0pW+Et
      LeAOj6Ks9RspL476yjJGdMcaAPquBUqFgvW556YjS8bJjyLfHGdYC2bPgAyOYb5dHBqVwqut
      YPT5HERcCO6tNd7pznEiybBS1IWgyKseWaur6IhkIXitkOXslYVBqVEF0MmlIHEnK0hIX+ju
      YfEJ2r3bgyhFxaDc5SY4sg1kjS3iDDegRd66eA5vbILyW28i6gmhQHzDU1tnhe9Fs+PCdF0S
      43eoN38Z5/YParUn+lni8cgiFSW2XxFCUzqgB82dcBoYroNwHazLFxHLS+2TIGpdDv6O/g5a
      MyYiq1E37R+oY12XermK3Hv9KnAWRZzh0j4q0BF2Cfv8adTQCPVtu5oDbo2hXnga03Wb9PTE
      g6uWH90WkaoF6rbtlcJaXgTAHRrB3T7WeddbBQjXQb3w9KrX2xsL1MtM9T07BTQjKLyjIFp+
      rCuePdxR/VV7PVwhtUZjIDb1e93ai2AdDYhBohs3k6TsVzEQrKEQnDwgxNICRpu9rgfE+Vb/
      mfQ81PjaXM6W+9uyWLB+rJjx2eV5mIvzOo5RP5AU5gag0cAbHYN1YJPo7Ut7cXlO2XaNo4dR
      +67XjlwDhDp0ENHXCfD2X6tFbRnOn8bbvX+g9ahLFxGGAfH2XwUX+r46w/VMCclKFmlYYFqx
      BulX42jthhKi8zqcpAVKK7OfVqs86KU5gtU4aRcxTN32EHPZ6LH9A22PECjDWDcm0TWfAO1K
      xSirIsHzMGQspHhX9ekf7sgoiJR4PT2Vn6CqTSJgPSCNw2xZb3z1s5S+K7Wkp28QAmnZeoKl
      FrP606L7Q/GpyLts5qvLnJuFoRFkqdhZz0SogrJF7kW9g9tmWNh6mQRBO6R4k4J2YKzXEEpq
      xzqgcNtFm1s1PWxT26Enr+Tu8g9AAdw/VkC++TqGAufUCWSpgixVCh/+FlKBVNhzl7S+u0hE
      hkL2KpHCJvTYFms0ZwzfWGauLCFcB2mXkJblD2zZ+X+pzyYI18WsrehLKTqFzxmUdTn9zx7O
      BPeMHHVJzxcK9E9zaRFZKiGN/NoDYSqE5+nTaVJGVqH+kZmcuGuzaGsRa3JmRa/+xsoS1tIi
      crqkI4N7nvbNzxn/QIFuc9fRp9Hs3EJVMUQjcSdTkYoeAmOx6p0jPBdlDRVqQ6UUAi/Fsa2P
      KMJepcoKSWcHUivMV1fXUM3VHH3cUh88D97lLEYIffmK9DrnG0D/JHvzpvoCFSk5/KeXArrI
      ZmAszmGsLGmWJqMYWRlCDo0UY3va6iuSNmfi9RIxo5DzqZ9YSqzZc77Qb0QWlohl2Y8a6E5v
      9sNqFr0ToSCiYlbKq1YU8QXqVGkP6KoIpTA8F3dmS8h3i9gpIWXZ+l14GVq3k60wcQmZVcK7
      nF+eWX+vy2V3+c36Ct74JKpUjmiKvGaZhtEMyeJFnudB15Ok+8EYkyiLSvm9zYKuuzDUU0s/
      Ip1q+V+4jv7ZE3UUFILpIARHf+YdEBlJV9sVJSQ/EqRXyab6N9gJgthEQR3rZbfzoaCl7dbQ
      DbCLhol3un+xXOAxKYJB37IqdVlXH7IOtMB+FFNoEon2asPJEPlfCAzHgT4d5sxHWpYQnI21
      PRBTFEkfaBjaRiD8mF++v/vqI97d62igDwppFuWi9pZmgb1SlK+GSJuuO2e4rtGXrXYV1qwi
      Y2PQ3hUDm1xNc1d+8gespUvB2p0J7tfHBvcUBDExeyusLyStftlrjDavz/Xi6ZOGVDXoKnZS
      7smTQVMocPlrTSAEh5fwradB59PTs/q4H6QErEuP5choSPxATRqUX7TtC9gWeoCODt0vNeia
      SPixOhPCfAR+Q0oWVMMloeusGRn70W6rMYc6kZlkhxF++3en4+4mUyH0Nzr0Gi1k0rK0b0nW
      QPJtBMrqgctbzzv5aqw9SYYl36gVqJrTMyrfiW697cSt6GkCCGGsgrKrfYmR/nU4udgo2aMb
      b88YTN1a9b6KMzQ4v1HUK9cbbGS3olC0DpseXSFA9ejCWmx4xFLnZiXWxKNsoHU3DTq9OGUV
      zLfOjFpdo19q0P6EDsxCqxVVGhbW7PnCpXhjE91prAbkvFiYhm7edSozV3M0VZPu8Khu+0Lt
      qFDlaiTszTrgKWNt1tuBmKTw6HkRUUSkliC0b4lhav9bOTKKHBlNS50JfX9XQRXdoDR6qWXG
      DUrZ9atuDU5hliwZykCZpj6D4UeadiPh7nMjMEwGh2rWhQKsH96gYWmD237F5Azu2DiiVMZ8
      62iX9Wg0pjcRnEdde/RhFAxyZxICr1LFMAy80XEMx8E6fbzzgZYkWCZUhsCyce0Saz4DYujJ
      DiCEQA7we8TktKZoxMYdGRtcRUWQe9XtpmEKnAcYhBAc2CiUQlk2nr9YyHJVXwvV34q6QP9n
      fc8yQA+Z9Y/2F92XWQR5jlYmcXj9iA2at91ybbB9FIINA1Gu+KfnWm0ogf5cG5K666OAUtMy
      kbbdRSm9T3hNQz8MYT76LgR7HuLwwVjUhuigC4jvvmJhWhjX7qfPcSFWF+HndyncJ2UzLUS5
      QuniWUStFq+oD9CVeuMbdISINTvz2UQfAmP1VwiW11wLbx7Sl70NEOrMSdi5Z6B16Iqyzgj0
      WnSXauAUIVjZNt7wKMIwEKnR4eI9lndBaqbT3rvGGo3/1gpj16QWLasX6pPzyolJ1IGb6OkY
      Yx5Ydm5NYG9I5IH6UEmRTss/UfSN9yaopIjdSbaNvPaOZjplmFoZsSYBcfvpCtET0jtFDA2v
      Ih0ZKNQ/8e9ZawNCOpQwEGgbjlISVFMeUpaNM7ZKMVMjO5gSAmGag/bQbuvSNZsAjc07ELUV
      vLEN68bCqFWkEVoKcXgJXmGDRLerpxDIcgVzZQmkh+F5YAYCbxa7lvYuTwN1SqfV09bwML3d
      AdmZBM11xe0AIpqqAHoYuKpcxliYx1643P3FbX3kIRUgJ6d8g1kfkYM+QcFYRT1C2jbIKkaj
      AUIgnB7DTvYDCtTM1oFXIyL/wlqyQMLAG5vAfutNjHo3HZAkiHULXVZt9/7izl4di04Y2rHV
      O3Pwp73sRW4zTGS5DIbQUdvW5AhpK7zhUbzK0MDlAkVrUOQBTIB8fIP07wuu77m+/yT0C7kN
      3VmCbpJPcc7RO0gtiWEiy1XdD+uBAx3UwG9TgK2lELy+rOAd8TYjNxMt617LYBPr90MHcQlI
      DKsbHHcdXMZWCELk7IPB6fr7tjqvh3vACmI1zjus3g5gCNSFs4jDrwD4Yl+SPrkbZJVTRFMR
      +UsAC/NIx00pswvSiibuozeqdBx48xCYZjtr1a+mj5fVXdOHkJdnUQM+UJPDGa7DscM8EAJv
      41aU42oDl+pQ7jqAQsDwCOKW98VeFLV+J7RRkZWtL80k8G6/A7WyhAos7DJaeH+UCMmzIW/Z
      rR8qhIG4/hbkxHSk6H6NmVR36CRiu2ucuI+QGh6F/Td2VdaaIQyl7i9lQVO0NUmm036+Z/pF
      +5/dqvtdB1SZ4Mie3LpDP++uuDVBuIF4no4ubdmIPt8p3b0rREqewEVaOA2Mo693VFZmm0eK
      k5NlpO+JFqWgOkRt/029OwCKlN+7LaPluR429tICptN4R9zBLKREeC7eyFhhUSY5eT/sAILE
      lUwphZASd2Kq7RbAouOmX/OyIGOXUa5AnT+dcHt7Vg1ZAnIOJr8Aocow9YAXBrXN2/NnfJtA
      RwFXdL6PLR19tgO0E+FWqpinjmOUKwMXYFYXQmslqkPIsYlC+dqgopMjS8ZKzh5mjUFWqhiu
      gz03qzm2vA6FYXDZqMNM7NkgICJ7c+b267tR26XIJR350K6+yLQDFPzYaEMFj7bvenv72Wdg
      XYvtQqBMC2dswj+6uIrRmVcJyrdi99No1rMatOuwKO8kCEN7WOY9w9CNcBMvolTCmt6I16gj
      pKddmLsc8sFU6fakVy/II+cH9BkooJWrUKbZenVT7lo1eooKIXfsgeow1SOvRi6t8P+JztJw
      axX6d0Uxw0wPPF/nssnTAylSs0KZFo2NW/QAzO3T1IdvKVdgcgazvoLRaCCt2ATIcuJMoqdF
      zZjQd2HSFOW+ir7PWXEeLaxKoq/5q1cdwqtq93khZeFtOuYNWgBCQKWKrFRZ2XVA85stUYJp
      /8Dox6wTF+ie4H+XkDogr6xU+lt+1uQ0LYTroISBV6747d9KV/R3ha+azhyfSTaL2C8B2xvP
      Hxj5VVL6lDqjuoA8tsboRRh+fWathvAc3OGxAods+qIFMpBbdyBc1y8ujwU2QeiJN3AmshSZ
      fpmJDZC11GQZceKvk2Y1mgWxbOpbdqST3lJ0+0qWnjb5sTs2gVcd8k9vFd3Eili2+2UsGxQU
      SKnvhcuXuk9aICFQpfL6FgzfdijiYiFaXLfz9MMV0VcFOQu9kWTmuSKabQCIDeYWF4oEXj1H
      EVfRD7Q26hreFH+FIORzRURlls8VQhgmWLb/WF5VuWUh2rRSNkMxtiXLtAO0w9myA3P+EngS
      NTXTK5lXDgKVaNcWS1Ajo8ixccyVJYTrokyD1d4WiiiT0tLqI5+iJV0nF5jiS3EgIEsM18EZ
      n/QfZ7dX+plgocl2Nm8PNQ7CdRPaP48AlZP4QvlS1ExZmpO8zmWp6dK8ilTb77JU0o2f6LyV
      T1PhDY/ilSqoUikHTUnED7L9k/KvBQfRTrsXUYbEz3jnd4UQAlkdDnlXZSZvKe3EXGWjAO0v
      5LqoToeAkprLMEApvKERvXoGgl2LijHN10hAYVt8p/W4U5pe9odekeJr5e/AyrIy15tUGUBZ
      NuHt61fRNbxug8oKoQ+JB7dgtqDXwVgE/SpvNcdRcxdsXtOUjGwZQN/D00fCrkIjeTCIqMU8
      fCgYyMnVKwrBhFBZQrDAWJzXZuU4J5PXay8JgftD/PfU9KTXEfdaTKoj61lRdEtvi1igy5Cm
      BQEXGXUDabGUXt1tB4KAgxSizZW9ZQdQdklHDFsNCEEYaruFqLxyRMTUvqoDJ9XHIzuPf6AD
      Jf3QhM13wj955lWqCM/LUd46RF4Fwxqguf6j2z6yw1o6gQAl8UbHMZcWWn0uUhUErYqtNhV1
      mzIi9qBlEGRMABUfbGmIlZGlCQpoSfy2SH2pZSSkSSUzkkB6gIiY7f1t2XNRQmDVVrAW53W6
      GOsZrFzK31GEav2GrJNf8VVPAc0IHSmTTbXrzNvKiH5hZJdvo6Wl6/0rzJPoTXgXLA5B2eH3
      +A6SqklBbDcN/tZsvDs0ol1HDFoUOhZC6POW0kIJEbuJJXMUpdWYkT6OeP7os15XwaSys9LE
      0/Vbleh3nvT0HcdhMoUsaSc6d2gYtzpcoM54vSkakdzP87RZXpo61ZnJ66bQUNQqEV+o/LEe
      gYUQ4LqYtZU2obfIcC5qDWhLn3S8sgcBPK18vfqJxDRJw7+ZT4TtmO97oiX6O6TQ6jkvuOfY
      h1GvYTiN5oqVTVFyhTm4sBZeoA0pX5W3YzPHZsLurOLvoyxtWv7YSp/4Pem9o4QO/x4sOACW
      a9mwYTqJ6qsYIKRhYgqBW6pAqXxVAF4VNHcC17/wT9Tr9astv0YwDAM54JtwriIZhmFg27YQ
      qqeb7q7iKt6+EEIIQynJm68+z6OPP8n8cvEw2QtnXueRn72OUhGTvY/zb73BuflaSs4mlPQ4
      dfpMyL1Jt8ZzTz3OC4eOtaRzluf43v0Psjx7mqOnZwtQWefF51/BrS/x/Euv0mgs8/TjP+Ho
      6YshzWeOHeKhhx7m1TdPoZTi+Osv8tNnXqThDXB9UIrawiyP/+QRXn7jrS5u3fR49Ec/ZL7m
      opRs4aKkW+OVQ2/kIYL52fMsrDg+SYqLp97kkZ88weWl1vFw8In7eOPcModffYWGl1RWMs4e
      O8yZS4ucPvoapy4ucubYazzx9PPUXd9dQdX56cMP8ZPHn2KxphUESnqcOHFy4Aph85Pv2fNH
      P37tMjPDNtUNGyl5C7z48iGGJ6YwvRUOvnQQaQ2jlmc5fvI0Fy4tMHvmBDUqjOWE7h4AACAA
      SURBVJQN3jx2ipnNW7h05Cn+n7/+ATt2bOP0W8c5deo8p4+/gjmxk7J7mZdfe4Pq6ATHDr3I
      ubk6U5PjCCFQXoPvfPVPuf/gHHe9+3oE8OKPv8EDL88yUikxWVG8fuQYlxbrjJYU9z/6FJuH
      FeedIdTSOY4fP4G0hhipWBx57SCzy5KxisHLBw/iWcOMDpWBOf7sS/dSn3+D2vAu3nrq2xye
      M3jsBw9w210fpGwInvrB3/H6nOTR7z3A++7cxx//yddYPvsa7vR+dkyPDKTxawtn+ZM/+RKT
      W3fQcFx2bNvM0UMvc37BYXJilLMnjvDGWxeYnh7j+JFjvPXWCRpOnSNHTzO9cYq5cyepUWZ6
      cpj/70/+V86ILYypy5w4dZbZC+d55ehZrttzDUdePciFJRfLXeTgq4cpD48zVNaq2PNHD/K/
      /dv/m/3vvZOpkTLg8H/97/8HM5s3U52Y5uxbb3Lq5CnKIxs49OQPcMd3cezVg2zaPMXxo8d4
      6+ws0zNTLF8+z8uHjjA8Psnc2WO8fvw80zOTGELwzAP3cmzB46GHnuSud+/mj//TXzMiLvPy
      abhx71bgMl/6468xZM/zynmTm/Zu5ukf/R1/+9ARPvyBmwdmXvjiF7/4Revp107zO//9/8Tj
      3/hTvvPWHEtHn8YaneB7Dz3P7uoFxPS1HP3eD7nrtp38+OVZ1NlD7LjlNo6efJz3bGvw3IkG
      8xdn+dTP3878/DyXLpzkK1/+az7xa7/F7Osv4k0d4N7v3ct1N76L0vgMJw69xIOPPsNv/qv/
      hVuvGUMpwU3veS+vP3w6JGzXu95L6dmvc/rCRl5dfJCnzlRQ517j3Xf/MgAXTr7JiaEJnnj8
      v7LlwO28+p2f8PH3THHfT4/hLc7yng/cznOvnOK3/tE1bPHLnD/5Kg94u/nXv7CbIwsv8MTT
      hzl96hRLjmLUBFC89uLzVMrDLNWHmSivcGqhxN0bBjP4AS6deI2JGz7CXTds4n/+N39BbeEw
      jz5+BOrzfOjnP8ZPnzrInmmDw+du49XvfYtrbriWg0fm2DG6zNnLn+TR73+bsdEyj+24haXZ
      ywzNz/PUqz/miLeDj966gxdfPcxWdYJnzpbYuXUjYwc28ZMH7+N7jx3kX/8PXwDAHtnILQd2
      Raiy+cidt/Poi6+xe+9evvY33+C9tx7g2w8/x/s3gnTrHHzhINduH+YrP3iJXdVFzs7dw9P3
      fZ3K6Bjfe+QZyvNvsPXmj3HTDft8oVNy371/w0d+5XcZqlQZNuocfvM4VbUzrHV57iwHD0tu
      2OLx4mP38dqZZWrzS9Q9RcUcnIXN2DU9xEOPPcPWXXtwV5a5dHkejDL79u1kfrnGvv0HqIo6
      DU9ww+13cP3OXXz47p9jzFRcuDiLVIo9+/eyZcs2xjfMMDVWZXrXAT5+x21s2bIZt7aMa49w
      w43XYy8e5UdPvY7AYW5+RRNg2WzeFNNCCZuPffoeTvzsceY82LpzD1umhlhaqSOlYsvmTQCo
      8hh3f/qTTAvJudmLeFKx7dp9XH/LHdxx/UZ+/OhPwyJLE9v57F27+fb9T3Dzhz/DPR/cz+7b
      P8jGcmAQMrjj7s+wf0py8LmnaUzs5SO3XMMzL+VhI7rDyPQ2Lhz6GSeWbHZODXF59iKOlGza
      vpsqKwxNbWXPjs0sLi5RHZnhY5/4CLt2HOCOWw4wd/E88ysNSsOT7Ll2B5tmNrBz+3YUcOfH
      7+GGA3sZqRhcujTLjr3Xs2/XNfz4/u+yWPeYm7scshYT0xsZKrV6+k7vvJ4PXjfN40+/ij00
      znX79+GsLKAAe3icDSNajbjzutv46PtvYf7CWWbnVzBKQ+zdu5fPfe5Xeev5Rzh2OWChBB+6
      59c4/uR9nKkN8d/9899juDTEh+64NaxzbNNufvNXPsnhV15iri4oC4fF+UvUC7Ba3cD88le+
      +kenX3+RE5c8Pv6Jj3PT3m1cWljm+lveywdu2c/PnvkZN3zwE+zbMk5lfIbp0Qoz27djC4sP
      ffQuFi9dYmr7ft532w0snD1KvbSBzTNT7NqxDem6TO64jmvH4dmXXueafTdRZYXte29g29Zt
      bAxWV6WQlNixfRMCWJm/wONPPMO77vp5hpdP8exrJ9m271Y++v534dUbbNuxnfLwJFOjFXbs
      3I2Q8L6PfBhv4RKlyW3ctGOcg6+/xW3vfT+bp7RhT1Hmzo99lEtvHWF663ZOn53lU5/6OBVb
      d750Gxw5fJiZve/mo3e9D+bf4oIzys9/6P0MlQcTRb48PME1MxWeeupZdt/2QX7uQ3cgl+Yo
      j27kIx//ONbcCY4tWNxz94ewhMGO3TswjQpbt0wyufMG9m8aYsWB29/3AXZumeKFg4fZt38X
      M1t2MVY1cZXBnXfeyevPP8mCrHDjvh3UVZn9u3aze88ugoXVdV1mtmxn2P/Owy88yamVCp/4
      0K08/thPaLgGn7jnM7ot7RE2DJfZes12KkMTbJsZozq9i3fv38T8coObb3s3sycOYWzYye03
      7sM2BdJ12bz7em7fO83xiw1GzRrju27l5j1bfZOM4vLpk5y4XOPTv3APt9x8Ewf27qA6tonr
      rt06UBZo3WuBjrz4GI3JG7lu2/hak3LlobHIdx99jns+dtdaUzIQCCGuqkGv4sqFEEJYS0ur
      5P15FW2wLAvXfScFEH77wLI0u2ct/uwp8OOvG46D8JxIjMv+OaYpgR9XP7ks7avduS4V9Qhc
      92g6qijDQJm29kWxbKzRMcpTUywdO6od5FxX36kgPd8tIsXdu83TMqsdtOlfBV6nbW7nACrS
      ptDW/kKEfk2KwFdMtXqARh2N2nyUEmhvoznFMS/89jT/oVjdxOqKetAaJtKyUZaNMk3GbrgJ
      AMvwPITTwGzUMRo1hBd4K8ZdfTOIjrqeBs+SXKqDcpIcR5PaIDFdtBEjBavY+46eWnGPqqxK
      VcrrhHJb2iLy2DTxylVo1FCmhRgZQSgwXAej0cCsr+hJ4Ll+WPMMp7i8nxN0j4ieu0gRKbOc
      MyNpFJFDJfE8nfz40hzlIpMs+fuSvI87ldt8oYSBLJUxPA9WlvCGRsIzSRZKoSwb17JheJTW
      M6j9co+9EhHrHRHErVRYC/P+LqtAGMhyGVkd0u0u/YEqktq+l/7o127eD2S5Ynfytc3jZh1J
      q9BtaWh1t9Goa89bH35YlGblQkqEUwch/APFNA8gDAQd/XQ75Os1TT/qa3/XZCuC6AS2bk8h
      MFyneVmdPwmCqNmG6+gDMqYZYQtzIH6eOGsj66RXHGQ07oCQlJ0yeJ3KUuUoujmXJEJKzfoI
      K2zn1gmgJAg90M3aCl6pjKpU/cpFk56r6AoqOjD9445GfQUZhjpR+oyw52HWV/SZbGnrFUus
      RcT+dxACbiZYYNCDXzhOmMQSKj7ABXiyuW3043D5lYyWSNB6eYqe+w2P/AktKOtVy/Pv+hLJ
      5bzT0c+NW0owjbDtkV7L1VFWy1lepRBKtt42EgR1zaGhSUaGdNbynoR00WdZ6ePP89DZCy1Z
      AnSknOggFpHtXIgwTXiyWqEnhjBQpogtPG2r1Dsb/fjWgL0KIsOFi0lrf7bb+BV6y0Bh1FYo
      nz6hNROOo7eTuForlVfsNHDypIs+S0qb8C5cPfLIB53QiZaAT9WDVTmOPtA+Moq7YRpZqujr
      eyIH2fWhdhkpR7WX7bdp+eQxzJVFRKOhLxz0PFp4/bRdIklVmqSCTFOppu08WSrYIurZePlx
      gV8lpE2rK16PYSBntuCMTqBME1mp+u2vNWttcYGiu42KnuhXCuGfFa5vuUb/7Xl+ZANijZ8w
      mIKrdHKrw9YQXStXgs7zv9VxEJ6HHBnFGR7TLKSUmscX/u+maLnKJ2z/NoFQYS7NoypVnJkt
      WjXtuv6A8dNmCappipb11vYBeqUtWPQMA2d8EmXb/mWBwXtfJapUM3AxYLVWGtmmpS4My8IZ
      nfCFNSPSR5EVt7Co/g5CwsokGnXMRk3rmxt1lGWhTKPJ7+fh5xVgmLjVYZzRcb/9zVhTX8Ht
      ngbpUblwlvrkjJ4EsabWw7XZbtlujn6AV6FkqMK74gd8HEnbsWGEKuSe4Ln6cmjhLzzhrptX
      n3kFQhhIy6JpXMtG+gUZAs03OY0mn1bIDB8v88rpLCUMCIIvtcT5LFiO64DjtArS3RT0Tkds
      F5ZWKTkqdzAnIum7d3RXCmvhMrJUKXA73zsTQkrt62OYTdXxgNtDOA3M2nLEWBkoKKKsKU05
      fr3y/t0iwqoL6eEOjzYXng6iURQd7gnO6EilKF08R33jVsyVBk2BkEhjxyXgvOrJJOktXqaf
      LuzooONV698dn+UgCZpbamg4abKD7sgoSoimISut2IKDUGS0vw6m5eAOlbTgbfqWztwTL4mY
      brV0vSCrUVK0flKF3a9KJkJ62sDlubjDY+mOkgnMSG9Hneo1zPoK9pmT/srXId7kQBCfMFmd
      2OFZZt+2pleGCaaB8CReWd/iIhwHKrFWTuqMwrtDO2GivoI5dwlplzDqNWSpjLJtlDDD+KEt
      pIdrRVbfJL3L+2wQiHqgoge2lFob6V8igiG0osEwMRyH8CL2tBIjNhjokQWS504jZ7awvPcG
      39koMkj6vVCsMwSWWiEVwqljNOqhwxXQ/PZBtUGthjp3BnfnPhgaidWdvHK+LY3JEaVL4tkt
      JSlduqjtLbL4AeIebolUeLUVcB2U7d+HpRRGvYZwG9r33TTD58mdst4MAylsWiQaMUK0XMqs
      LIG5suTbUBKKTFxAc36vEH4o74SCpYeqR+K5Bu0spf8ZmuZ3xhrknyeRSsubptHU8SulNWUq
      ft4hBTHHzg4yQCe6YtoJJbHnZmlsmEaZpm848/2KpEQo5RuB1PrfHRR6sBuiKdwC9vwlGhNT
      qddwtqHDd3Y9RA0DYUduR1c6zLrRqOOVKxiNeuRgk09K3JK/7iF8BYtWAwvPA8/DHZuIjDnR
      VBPnaMt4sh52gASVqFRYi/M4E5OUTp3EWlnCmZxBKKWv+lyYQy0uIF0HYRiIYNvOZtv6j4Qd
      KTSQKIXyXJRSmMMjMD6JskuI2jLe0Ij+XSm92hfRAqchq8/CaHsJ/KQwELEbEI1GHXN5EVkq
      Uz36Oti29oXxPKjXoLaMatTbi1s1TXX8wlSSWWWFnuCjYzpwsNNA1Gqs7LuxOWYii692IixG
      R4DehODYdiJQvrkeVHWYxsg4ztgEAEajRsm0MGoriEZdf4jhV69kZPuKs0VJPdX+IYWQyI0J
      X7AKbB8SWRnCnZzBqw77HpxQOXqIxvgkWD2ITxFjVssFEIlkpbBACaEoA7lEGSbu1Azu0Kg+
      feZ5WCuLGJdnEXOzkT7Lo/XpL1pLT1FKKAWWhTu5EW9Ih84xGzUM6WGsLMfusIiX04mAVgVB
      DyyQJrStaqErcYdHUHY5nPNiaRHlNGjsu1FfXalYX+yQ8tcnIfy7ZQXm4hzG2VM4+9/V3B3O
      vAW79vdUVe5DLpDBsrT6tOiCjfB2z8aGjbqdAYTAPvkm3sQUauOWhKLWkC2KO7sFf0uJefwN
      1O4DeGMTuFJinzkBsxdg8/Zm/lA+y1lf7FN7YIE61OK7TQRqLDF3CSU93JHxZpoQ62EGROGr
      Op065okjsP9dYQepbsKZtzVrfhWZKpg+zOUvRAGMMyep7z4QEeDXv5rOm38GY2UJxvwxo+jD
      ZG3N3xsLlKTZ8QkUUqKkAssXFg0D5dSb+tvQYrl+O0F6HmrFj27t8+Itgmde5PnEFLtU960T
      yakU0mk02by3A5TCWV6mHHrOqsj/EcQmei5EF4Z4WQVK8dV0Ka8Dotv8WFoSrG+thJQ0AwQo
      f2HtaVQWRGAEylIh50RLO6v13e4BZILWqs9kt0yAYmV3UN3EZ2b0tvPUTl1nCFVwPr0CVNut
      7YOECneentDWF70Vt2oIPJAjSOQm45MkY2jpdTlVCC4CX5OR2pgRKgIBMuCf/cM2yhCYtRXE
      8lKyFS90afVZpsDAEymz7fdevkUYuDObWxtdtCYZ2MRNNaL1Y7FoZYfwPBBgOA2MpUVo1PW7
      tvMGtAun8dNlaVEoCvWHblw5Oo4caoajF0b7d+fidjKqjmfvzRCWG/7g98MACqeBPX8Zd2RU
      r7ClUqhmbG9cf5K1PPdpjf4eT4ciVNYnavva6/FeewljdFzH6Gn/hO7Q89jt83ItPcqz55CW
      jTc8AuVy8+pQM+JHH7ZZbAJEkXTUMukIYxb8/hNOA++VF+D2D2aU0SfOId0QVgSdPlC1/qoI
      1XbC8zCWF1Fj41jL8zQ2zKwLYVhVR+jDMZYYevuu9HFUcGIE41MpzOVFvNFxUOh7iYd9vfoa
      9oFwHdSJoy3PVkNMiakEitUowhNiKUizWwnAEHrdTjq48I5CP3qxvQzRy8R6OwjAq4SWHSDY
      YPI2j8p0PRWtAz5kVdArjamNYW1quZYwLANE0qGVHlfARG4ld2MmFegvMj0Um4iMMx4tPweJ
      fh4a6qGc5LAo+WrtutIsXs48/gZiYmrg+mrv/GnUtdf1qTSVviL31Mci9nOwEPUa1pkTqKlN
      /pMe1aVttk5fk3bpIt7URh2LNi19V3XlLaDZni0TQEGyS28/oGJ/pDXs0iLe9l2+O0I0S59W
      JX+1UCePtw+rvHW0JfPL7HVNSKInzRmu5y0yoULPRUql5YMBQi4s6EjNbejimwKWJcphFEDb
      DtAeKnFQSK6lJegB+INAIhz/3gJDdC036FNcWresPK/LdTWZ7kG12eD6Iq3kqPJCxSZht1X5
      2iJhNB0Oc7mUFLRMddGhbWrQ/IWoyL89IL7qRg46gLYXAAjfY1RJECLaeEmrY0Z1hgBhwkAM
      Wmutyeqxft+lPfzd8+NoKrSqtGteW5cpfTWrCkLAx9FWfr76egkh3JszXCLLkEMtlFGN8tww
      gbm0qH82arhDI0jL8m9TcfRkCM8TZDSmUhiei3BdHWBKKjBIPl7XMxLK7EUwDrFKE0spHYoF
      5UedWMGo11C2jVsd9g80ea36/2bmmB1Gl6fD7TdQJR2qRJmR9H2hOfiluzYagCEsx4eJlN9B
      G8ukBDzKJ4/R2HoN1rnTOHtv0KFHpIkhDO2SYBi++JnAtwm9Lgg/uJe5soQzNqGDfKmUFWgQ
      6LFJi2Xv8ZtkcBYCrJUlxOIC5oUzqKmNOGMbUEoiPB3hLmjfbHL04mMt1vCEQNhlVCD/JS4M
      8Yf5vqd5BVSu5C31xNSgBRtQFNVGd06t/MCxQknU/CXEhilYWQIhKJ0/gzsxpXeCyFkE5Zet
      zx60qnIVQKWKuaJ3k5D3XEtVeKrbQ6+F9AE+CyRcR18ntDCPOb4Bs7asL5oooJ1TgDQMlN9f
      KBn5zjwsUJGaukObFmh9QDeEMJtncfFZHlkq6z8TcqnYz/C5lKEffBE7R34E+1CSu0CvJQf/
      rhIbJJq/CGGEofKF56KyYh6lQEkPaZdozdjfHhBtv2TQE/t7MFeg94AwgLUQCMsGw0QYpt62
      goPpF8/5O0XE2BZ8WWCdlgplWXgTk63ywkDRrRqV1M4b3LBPK9lX6RoGWCZGEGfTh1Ffwbx0
      0Y/4YaTvZkriTm3S50JMs+WAfmorpaiX8yKPONDBGW49w1ejCYEqlXDHNoQqOuE64a0ryrT0
      ai+EvussFf1chQoyjwX6NWDv1g4R6z0gpMSd2ogqlZvtHxGMVcSFWd82WgSrL5f1JgR3ONCd
      kKFY2eFNijGfo/BUmZ/UtMLdQQlDu1YbZiAaASTEjOn/oMonhBVzAUhP2qvZNE23H1GD+iu5
      T4l+HA2/GBwTDaIyBHPFdVpiJ8WrSv6kpHbJKwT7JeRI3r/IcL2gZ764dVXSGokmiyNcD6Xa
      AnCsExTUQA1KW5ur3A6JosdbjeakEJ4X7sJJRrSB72oZZIsYPWvjilno29sTtzAcWatp5N2a
      TYYeNT59Mje2It0Vq3u0qJZzqknXChHCenCHFgNRg0bTNj0hY3St05bNFRoxZBXy2EsyQiP2
      xRlxsItCBzF7oHVnIlJ1jyxQDw0YDu70MnKpAOMuvDFL5Koij3ZnPXJlvULFd2SRbuxaD0gT
      gosrnbr9wjw1ZVgMw41BaYE3PDtMU11qGOBFs3RnZSyCxK9KVO0lrL4pltHU0Ig9oU9lJXl0
      KonsJnRMUdmoS8TvX+7BENZLI+apySc08SxqkEQ074FNKr0fMkDf5dViC8fabhgdajezD5Aq
      AaLvPuK9QcTcYNpPhOXeuVT6AM2ZPRMC3cCGAUb00gelb2GR0jeuJKg3k8y9oZp0gEMqd9E5
      E4btm6QIoPu2z660tW5htMQyleWydorzQ5K35IlBWRZIV78Xaq1ncxNpO4B+WaAcVoHNC84D
      RHxJgpiXqsMKFOaP/iyKNe20qHNHjBBB6nHJ/tbv751B+xnmumXtu0H7ibDcWQOuupvmyGGr
      VhK1sgyNhv4pFTQaWOdOQeRCjuQy/Heuq28OHxkNXajxPJRN8uq5alEREuhO0SCluW2rjHe9
      wdfSS4lwXaTTwPRcpFXCunA2YnuJEh2lI/JMgSqV9ZmCyOXg+ake1FRLYYG6sQT3Ww5W0V+k
      PpARWISdLdvJbUmNDA7h33XcapRZw6W9QJuJyL89FVQYraNVVqrISrWLYhTG/CVfZV54BgwG
      /VGDquC/rvMmQfgrm7Jt5PbdeOMbYNc+zNnzOEuLCENgmLbPfwVakuYAEcHKpJR2mBMCs1JF
      2iWE6+BV/KBXiRqMBKIG0VnFzCEpGIAWSxDKSrJUwRgZRV17ALdcxjp7krZTdHlIsG2wy81r
      ZDNtG20UFfyCzoiT3NuJsB5k4FQEJnVhUN9yDSjwNm0D6WFO6EujVeCFmDBglU+X5ue04OWa
      VuuVRsHk6Ab91kjmqS8BYgCGLCUMhM9eutVhLN+a61WG/InRA7sb7Ssj4jpRjMK+s339D4+e
      L2Nq34lhfatJ8yB1c0LIUqn7+mLbrzWWEPkgUS4oUEsvfZOSN5cxsJWK7iu1LMTQSKjh8coV
      XaKS4PVyhjoiF0gPy7ZRVrwvc66mPW4ccd+F3qJC9GTtS1gZADE2QWn2HOa503oiVKugFKJe
      B9cppnoNyrYsrVL1JKpeg+oQzsYteFIWjz80KNVXUfGrizfNumLDIGhPu4RVKmE++zjewjzC
      shD+AaR8URyS6gKEAVLq+8kMA3ntARzb1qt5SyDieCO0q7h7iogXlJmlBh1YXKCWciPCaNy1
      dngEiUCNTehGL1d0mnI1ZFtaGyFYHePCbfN4ZBji3HPBLqGGhpHV4UCV0krHqiDDuFcE3bID
      cf196NZs4o6M4W3biVpeRlgmBG7NMuoWnWB7SeXVRFMr5zi6qLENyXejrUHIxh5cIQpKcgFP
      jv/TF0JDw5QvsLrDo5QuXaA0NwuNBlQqTYtj+xhPJ6tFM+c/dBrgNFCeQ21sAs8utTS68g/V
      dIvci8da2haUQkg3wktHBq8vV5UXFxBLC3rnDI8zdssCBRNA6v4UAq9Upj6zOU5Y97tMHBld
      GDeEDjA6dFbaBDYmCHYlBI3JGRoTU5oda9E39wqfZRPCv/yitdxE7UTOzyzEGa1pcFrh+8O0
      P0cIvOFRlvZcF8oz/eQIwjIN0dyVWxLEK+v/ShE/D9CbDJAZHTpWSkTFpkzLd2fwMOt1ZLne
      nJmGEV6O3H92LEKvlM2jfH69VKsJnZKv5NUe0npdKN5AyhB4w2P+OWuJ4Tr+oXXVVDwErid9
      RtPG4/8W7rhas2eUy6zK/TuZdoDc3y0KCME6wkCgilSmiTs8ir20gDukIw2ERxY9F+GmlZvX
      iBXVmqTICHFh2mlQApw45b0e7BiQHr/r3IaJM6bDnBhOA2WamNGzu8E5354pbEfYI8FOK0AZ
      Os6QaNQxhkZotOQY/LISc4Uo0tm6oQrtFkZz8Cm7hDM8irWyhH3+dDNqgNK3Swqf59TlB/n8
      HxksRLByRdPEnwUusSK0J4BXHaKxcy/SV/21VJj3E5PISiW1u52mtewu2FAhkOUy0rIwXBez
      voJwGroZ8mrEkmTgbqCUPwkt3JExGrv2DVwZkekO3RekfYBAD7hIGmXbeLIK45PNARu4LAQx
      KvMu9kmbQ5L6PHgmonyoQlq29mMX8QLyYxAaNBH5t6+lmlYYtCoUPrv/9Gb+NAVRStlCKZSg
      JbBBKzoQ0qOM2P8JEKU3qvUJIgMHEAKE2b2PySAQF4pDDYaKJEmIhRPuTEll9kpT2osilaXo
      24Wp3RPWENnDO0EpkZYsJzLPA3SD9rpVU+UZHTimibAiFt7wxVrqBDvAMDDskhbMfO2B8COl
      tSx3WYbaXtnYQvnTE4u3ywXZEbTdEjmANu7RFSKl7iiLEZX4XbdtYqxreC4yuELUn6gyjF7d
      wzcUyKrCf/uwUARnKtYr4u0SD6OeKmMlaBxzogdnuJTtyZfwlWlpCd9zUYaBBzSefxr14rPI
      IOa/P8Nb5kMXltk0u1i4RscnXELZLayqLyipRh1hlymFu5bAW1ryOyY3eX1AUlvkEY6aaV27
      hHj0fpTrhqaQQBPTDCtM8e9KkrHi79LKDHUbIozYrZQKafNmLyADVbs/0HtdO+PZB3dPcHCh
      RbBy7tyDvW0Xob65DWkSVMeKMvJktVZWz0WTiRaduLCs/sukfYdoKhN8OHfeHf6d88tXDUlz
      BsBWCmmaTZYaQdvlQP0Vgoup1USSY5rUDW9dnkUoheMHpw0OpbSGpuu0tRfdkZLydSi/RXsU
      5zn14BcrS5i1FX2mYM912j8mck62xd+lKKmdkqbshFHf/RBKhjfqlE8fR5ar2o1EyshF5AlE
      xJ+1sBV5bS9Bmow2iPl9NctPpkX5kedEo46o13CnNyHL5ZgcGbR9rMgsEiOwulfdJQwWhA6a
      KgTe0Ig2briOJkhK4hH99a8qWVXWCW3p0746x6BUsV8ibJjwV1MPrSd3wQ248QAABMlJREFU
      Nm2LnC3osvFaolV0oi2QN4rMGnCHRiKsmvD9qXKWMegdLm/5wWJpmlCu4FWGEOVeNYati3YP
      LJBCel7kwgkFpkljapPm+0slf6UMk7/tEPghCSX1t5gm0jDDlSlciaSHCKMnFEVGnoyoEEoq
      rVSIPrPLSLuB4TjI4bHwfq/1z7KlIGhPGXgB0wyEEFGxCym7/kar1fenoOFHSh2YKgJ3dBzh
      OhiOg1BJV2G+fRCcYhW+p6ICVPRAvpRgmjoYrAmInDr1qHqYohG2m2WoqAuDECjTxBsawXAa
      OjS5fJtPgMAM6GuuJAJZ8S31IRvka7bycp/ZdoAiLSWwqkO4pYr2sw+sqr6bg2d3e3rrbYLA
      oxQVuk+IxLtve0BWZDjDQFSqNJUKEUdDq5vIbG8TxLWEQvgW/O6YjA5CcIbOXgjMmc1I26L8
      1lF9iN2ytfrTNJvndjMFo5QJ18Y2xQWxPIJZlj4uKV9aetH8DqUQnqvlGvRgE65DY2IKZZrY
      C3MZ9PSCBHorVcTGLVhLCxiNOl65gjJtMPXFgWmsU+7q1hPLGnaH8m8J9VCGPhYlDRNvyL9x
      PgcLWlANmqDliaJcQVklGpPTQERd2KNqaj1DmabWBgV/+0K/UEq7FQeDJ5xrvbVDavAru4Q3
      NoG0y3rRCfSDUiLa+i3YQaILQPYi0nzbvjAk52zdpfLrjgryaArfXT6Q7/UOIKTUfk0iKDPf
      DO5sCY6GJYwObCFwxjdgrizpjlcKQ8Uby7+kIjqD41+TNOla3mXtHp0+Mp4mr0SenC7Qooug
      gf3O0D71ZX3GAQHKQ0gP1XPwbZEqWHuVKubKEubKMhhCs1+x21zivwa69PZvy7OTxspcLzuE
      r4Rwxjb45xqy1dEiyOOjcw8FvuEJp3ecmS1d0XwloeVEWxebQZrrtyqVqW/c2jVd72gU2HWz
      J4BS0Kg1r7xRCVvL28WvZ5AI2tvztPXbtMDw94uolq0gW6SkpyNhJL682u5pUAVsHp1dBJMG
      ffNlbqLe2YjvjtB2j1kKMlvw7eQ4uK6Q1eat7zK0QEIfmpjehDItzOXF8Kxu02Iaz5NUeV5+
      O0/6uGCX9ix4Hud5k7RBSfQnySaq/V0o8EpfD6+FUWthHlC4oxMJC0grj5op5VSGUKPj+pio
      Cu46buboKRDXekdROcMXioWUWEsLeNUhVNr6nmYHELRu2dIyqU9tRHge5soSymgeoIifrm+W
      EBBfgPokP5r8aoRm/jS5LkmL2gclVXjUUuoJIH0fIaNR0+3kD9ogXTPOfkLlCc0lxzfgjYxp
      X6rw1Fa2kJdMaGA0ilbUoQGKtH80PdG6Iu86tX2cxiI+OlFttVJ4lWpqW6uYdrh1B4gO6iA6
      gGkhS2UakxvzE3SFwxsa0b8o5d+XGzXeiFCNlwmh43MqoYPKhuEiUbS7RGbtWNG/SXiWNTKT
      ykibSN2uKvHdOI9GKkBy3c7YBv3WcbTlPkgr4vnaJkBQh65IGSaqVAmFu56/70pBwCGGsYei
      OwAtK2TLQhdb2d2RMVpZrtjyFSLPs05pipaRp/w86ERDnjqSn7dc1h1t+0w1aJT3iiTu7LFS
      hD9/pyKDzQhOyAW/++8S4zCF8XmMtklxFQURP4Ibw/8PW9B5CBBCp4YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Error Paisaje 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Zonas de Error Máximo, Geométrica 1' width='192'>
      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
      t0oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Error Rostro 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
